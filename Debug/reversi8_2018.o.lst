   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2018.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2018.c"
 1212              	NO:
 1213 0000 00       		.space	1
 1214              		.global	SI
 1217              	SI:
 1218 0001 01       		.byte	1
 1219              		.global	CASILLA_OCUPADA
 1222              	CASILLA_OCUPADA:
 1223 0002 02       		.byte	2
 1224 0003 00000000 		.align	3
 1224      00
 1227              	tabla_valor:
 1228 0008 08       		.byte	8
 1229 0009 02       		.byte	2
 1230 000a 07       		.byte	7
 1231 000b 03       		.byte	3
 1232 000c 03       		.byte	3
 1233 000d 07       		.byte	7
 1234 000e 02       		.byte	2
 1235 000f 08       		.byte	8
 1236 0010 02       		.byte	2
 1237 0011 01       		.byte	1
 1238 0012 04       		.byte	4
 1239 0013 04       		.byte	4
 1240 0014 04       		.byte	4
 1241 0015 04       		.byte	4
 1242 0016 01       		.byte	1
 1243 0017 02       		.byte	2
 1244 0018 07       		.byte	7
 1245 0019 04       		.byte	4
 1246 001a 06       		.byte	6
 1247 001b 05       		.byte	5
 1248 001c 05       		.byte	5
 1249 001d 06       		.byte	6
 1250 001e 04       		.byte	4
 1251 001f 07       		.byte	7
 1252 0020 03       		.byte	3
 1253 0021 04       		.byte	4
 1254 0022 05       		.byte	5
 1255 0023 00       		.byte	0
 1256 0024 00       		.byte	0
 1257 0025 05       		.byte	5
 1258 0026 04       		.byte	4
 1259 0027 03       		.byte	3
 1260 0028 03       		.byte	3
 1261 0029 04       		.byte	4
 1262 002a 05       		.byte	5
 1263 002b 00       		.byte	0
 1264 002c 00       		.byte	0
 1265 002d 05       		.byte	5
 1266 002e 04       		.byte	4
 1267 002f 03       		.byte	3
 1268 0030 07       		.byte	7
 1269 0031 04       		.byte	4
 1270 0032 06       		.byte	6
 1271 0033 05       		.byte	5
 1272 0034 05       		.byte	5
 1273 0035 06       		.byte	6
 1274 0036 04       		.byte	4
 1275 0037 07       		.byte	7
 1276 0038 02       		.byte	2
 1277 0039 01       		.byte	1
 1278 003a 04       		.byte	4
 1279 003b 04       		.byte	4
 1280 003c 04       		.byte	4
 1281 003d 04       		.byte	4
 1282 003e 01       		.byte	1
 1283 003f 02       		.byte	2
 1284 0040 08       		.byte	8
 1285 0041 02       		.byte	2
 1286 0042 07       		.byte	7
 1287 0043 03       		.byte	3
 1288 0044 03       		.byte	3
 1289 0045 07       		.byte	7
 1290 0046 02       		.byte	2
 1291 0047 08       		.byte	8
 1292              		.global	vSF
 1293              		.align	2
 1296              	vSF:
 1297 0048 FF       		.byte	-1
 1298 0049 FF       		.byte	-1
 1299 004a 00       		.byte	0
 1300 004b 01       		.byte	1
 1301 004c 01       		.byte	1
 1302 004d 01       		.byte	1
 1303 004e 00       		.byte	0
 1304 004f FF       		.byte	-1
 1305              		.global	vSC
 1306              		.align	2
 1309              	vSC:
 1310 0050 00       		.byte	0
 1311 0051 01       		.byte	1
 1312 0052 01       		.byte	1
 1313 0053 01       		.byte	1
 1314 0054 00       		.byte	0
 1315 0055 FF       		.byte	-1
 1316 0056 FF       		.byte	-1
 1317 0057 FF       		.byte	-1
 1318              		.global	tablero
 1319              		.bss
 1320              		.align	3
 1323              	tablero:
 1324 0000 00000000 		.space	64
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1325              		.global	fila
 1328              	fila:
 1329 0040 00       		.space	1
 1330              		.global	columna
 1333              	columna:
 1334 0041 00       		.space	1
 1335              		.global	ready
 1338              	ready:
 1339 0042 00       		.space	1
 1340 0043 00000000 		.text
 1340      00
 1341              		.align	2
 1342              		.global	init_table
 1344              	init_table:
 1345              	.LFB0:
   1:../reversi8_2018.c **** #include "stdint.h"
   2:../reversi8_2018.c **** 
   3:../reversi8_2018.c **** // Tamaño del tablero
   4:../reversi8_2018.c **** enum { DIM=8 };
   5:../reversi8_2018.c **** 
   6:../reversi8_2018.c **** // Valores que puede devolver la función patron_volteo())
   7:../reversi8_2018.c **** enum {
   8:../reversi8_2018.c **** 	NO_HAY_PATRON = 0,
   9:../reversi8_2018.c ****   PATRON_ENCONTRADO = 1
  10:../reversi8_2018.c **** };
  11:../reversi8_2018.c **** 
  12:../reversi8_2018.c **** // Estados de las casillas del tablero
  13:../reversi8_2018.c **** enum {
  14:../reversi8_2018.c **** CASILLA_VACIA = 0,
  15:../reversi8_2018.c **** FICHA_BLANCA = 1,
  16:../reversi8_2018.c **** FICHA_NEGRA = 2
  17:../reversi8_2018.c **** };
  18:../reversi8_2018.c **** 
  19:../reversi8_2018.c **** // candidatas: indica las posiciones a explorar
  20:../reversi8_2018.c **** // Se usa para no explorar todo el tablero innecesariamente
  21:../reversi8_2018.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  22:../reversi8_2018.c **** const uint8_t  NO              = 0;
  23:../reversi8_2018.c **** const uint8_t  SI              = 1;
  24:../reversi8_2018.c **** const uint8_t  CASILLA_OCUPADA = 2;
  25:../reversi8_2018.c **** 
  26:../reversi8_2018.c **** /////////////////////////////////////////////////////////////////////////////
  27:../reversi8_2018.c **** // TABLAS AUXILIARES
  28:../reversi8_2018.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  29:../reversi8_2018.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  30:../reversi8_2018.c **** 
  31:../reversi8_2018.c **** static const uint8_t __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  32:../reversi8_2018.c **** {
  33:../reversi8_2018.c ****     {8,2,7,3,3,7,2,8},
  34:../reversi8_2018.c ****     {2,1,4,4,4,4,1,2},
  35:../reversi8_2018.c ****     {7,4,6,5,5,6,4,7},
  36:../reversi8_2018.c ****     {3,4,5,0,0,5,4,3},
  37:../reversi8_2018.c ****     {3,4,5,0,0,5,4,3},
  38:../reversi8_2018.c ****     {7,4,6,5,5,6,4,7},
  39:../reversi8_2018.c ****     {2,1,4,4,4,4,1,2},
  40:../reversi8_2018.c ****     {8,2,7,3,3,7,2,8}
  41:../reversi8_2018.c **** };
  42:../reversi8_2018.c **** 
  43:../reversi8_2018.c **** 
  44:../reversi8_2018.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  45:../reversi8_2018.c **** const uint8_t vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  46:../reversi8_2018.c **** const uint8_t vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  47:../reversi8_2018.c **** 
  48:../reversi8_2018.c **** //////////////////////////////////////////////////////////////////////////////////////
  49:../reversi8_2018.c **** // Variables globales que no deberían serlo
  50:../reversi8_2018.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  51:../reversi8_2018.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  52:../reversi8_2018.c **** //////////////////////////////////////////////////////////////////////////////////////
  53:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////
  54:../reversi8_2018.c **** // Tablero sin inicializar
  55:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////
  56:../reversi8_2018.c **** uint8_t __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  57:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  58:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  59:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  60:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  61:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  62:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  63:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  64:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  65:../reversi8_2018.c **** 	    };
  66:../reversi8_2018.c **** 
  67:../reversi8_2018.c ****   ////////////////////////////////////////////////////////////////////
  68:../reversi8_2018.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  69:../reversi8_2018.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  70:../reversi8_2018.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  71:../reversi8_2018.c ****   uint8_t fila=0, columna=0, ready = 0;
  72:../reversi8_2018.c **** 
  73:../reversi8_2018.c **** 
  74:../reversi8_2018.c **** 
  75:../reversi8_2018.c **** extern int patron_volteo_arm_c(uint8_t tablero[][8], int *longitud,uint8_t f, uint8_t c, uint8_t SF
  76:../reversi8_2018.c **** 
  77:../reversi8_2018.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  78:../reversi8_2018.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
  79:../reversi8_2018.c **** // pone el tablero a cero y luego coloca las fichas centrales.
  80:../reversi8_2018.c **** void init_table(uint8_t tablero[][DIM], uint8_t candidatas[][DIM])
  81:../reversi8_2018.c **** {
 1346              		.loc 1 81 0
 1347              		.cfi_startproc
 1348              		@ Function supports interworking.
 1349              		@ args = 0, pretend = 0, frame = 16
 1350              		@ frame_needed = 1, uses_anonymous_args = 0
 1351 0000 0DC0A0E1 		mov	ip, sp
 1352              	.LCFI0:
 1353              		.cfi_def_cfa_register 12
 1354 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1355 0008 04B04CE2 		sub	fp, ip, #4
 1356              		.cfi_offset 14, -8
 1357              		.cfi_offset 13, -12
 1358              		.cfi_offset 11, -16
 1359              	.LCFI1:
 1360              		.cfi_def_cfa 11, 4
 1361 000c 10D04DE2 		sub	sp, sp, #16
 1362 0010 18000BE5 		str	r0, [fp, #-24]
 1363 0014 1C100BE5 		str	r1, [fp, #-28]
  82:../reversi8_2018.c ****     int i, j;
  83:../reversi8_2018.c **** 
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1364              		.loc 1 84 0
 1365 0018 0030A0E3 		mov	r3, #0
 1366 001c 10300BE5 		str	r3, [fp, #-16]
 1367 0020 130000EA 		b	.L2
 1368              	.L5:
  85:../reversi8_2018.c ****     {
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1369              		.loc 1 86 0
 1370 0024 0030A0E3 		mov	r3, #0
 1371 0028 14300BE5 		str	r3, [fp, #-20]
 1372 002c 0A0000EA 		b	.L3
 1373              	.L4:
  87:../reversi8_2018.c ****             tablero[i][j] = CASILLA_VACIA;
 1374              		.loc 1 87 0 discriminator 2
 1375 0030 10301BE5 		ldr	r3, [fp, #-16]
 1376 0034 8331A0E1 		mov	r3, r3, asl #3
 1377 0038 18201BE5 		ldr	r2, [fp, #-24]
 1378 003c 032082E0 		add	r2, r2, r3
 1379 0040 14301BE5 		ldr	r3, [fp, #-20]
 1380 0044 033082E0 		add	r3, r2, r3
 1381 0048 0020A0E3 		mov	r2, #0
 1382 004c 0020C3E5 		strb	r2, [r3, #0]
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1383              		.loc 1 86 0 discriminator 2
 1384 0050 14301BE5 		ldr	r3, [fp, #-20]
 1385 0054 013083E2 		add	r3, r3, #1
 1386 0058 14300BE5 		str	r3, [fp, #-20]
 1387              	.L3:
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1388              		.loc 1 86 0 is_stmt 0 discriminator 1
 1389 005c 14301BE5 		ldr	r3, [fp, #-20]
 1390 0060 070053E3 		cmp	r3, #7
 1391 0064 F1FFFFDA 		ble	.L4
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1392              		.loc 1 84 0 is_stmt 1
 1393 0068 10301BE5 		ldr	r3, [fp, #-16]
 1394 006c 013083E2 		add	r3, r3, #1
 1395 0070 10300BE5 		str	r3, [fp, #-16]
 1396              	.L2:
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1397              		.loc 1 84 0 is_stmt 0 discriminator 1
 1398 0074 10301BE5 		ldr	r3, [fp, #-16]
 1399 0078 070053E3 		cmp	r3, #7
 1400 007c E8FFFFDA 		ble	.L5
  88:../reversi8_2018.c ****     }
  89:../reversi8_2018.c **** #if 0
  90:../reversi8_2018.c ****     for (i = 3; i < 5; ++i) {
  91:../reversi8_2018.c **** 	for(j = 3; j < 5; ++j) {
  92:../reversi8_2018.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
  93:../reversi8_2018.c **** 	}
  94:../reversi8_2018.c ****     }
  95:../reversi8_2018.c **** 
  96:../reversi8_2018.c ****     for (i = 2; i < 6; ++i) {
  97:../reversi8_2018.c **** 	for (j = 2; j < 6; ++j) {
  98:../reversi8_2018.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
  99:../reversi8_2018.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 100:../reversi8_2018.c **** 	    } else {
 101:../reversi8_2018.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 102:../reversi8_2018.c **** 	    }
 103:../reversi8_2018.c **** 	}
 104:../reversi8_2018.c ****     }
 105:../reversi8_2018.c **** #endif
 106:../reversi8_2018.c ****     // arriba hay versión alternativa
 107:../reversi8_2018.c ****     tablero[3][3] = FICHA_BLANCA;
 1401              		.loc 1 107 0 is_stmt 1
 1402 0080 18301BE5 		ldr	r3, [fp, #-24]
 1403 0084 183083E2 		add	r3, r3, #24
 1404 0088 0120A0E3 		mov	r2, #1
 1405 008c 0320C3E5 		strb	r2, [r3, #3]
 108:../reversi8_2018.c ****     tablero[4][4] = FICHA_BLANCA;
 1406              		.loc 1 108 0
 1407 0090 18301BE5 		ldr	r3, [fp, #-24]
 1408 0094 203083E2 		add	r3, r3, #32
 1409 0098 0120A0E3 		mov	r2, #1
 1410 009c 0420C3E5 		strb	r2, [r3, #4]
 109:../reversi8_2018.c ****     tablero[3][4] = FICHA_NEGRA;
 1411              		.loc 1 109 0
 1412 00a0 18301BE5 		ldr	r3, [fp, #-24]
 1413 00a4 183083E2 		add	r3, r3, #24
 1414 00a8 0220A0E3 		mov	r2, #2
 1415 00ac 0420C3E5 		strb	r2, [r3, #4]
 110:../reversi8_2018.c ****     tablero[4][3] = FICHA_NEGRA;
 1416              		.loc 1 110 0
 1417 00b0 18301BE5 		ldr	r3, [fp, #-24]
 1418 00b4 203083E2 		add	r3, r3, #32
 1419 00b8 0220A0E3 		mov	r2, #2
 1420 00bc 0320C3E5 		strb	r2, [r3, #3]
 111:../reversi8_2018.c **** 
 112:../reversi8_2018.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1421              		.loc 1 112 0
 1422 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 1423 00c4 183083E2 		add	r3, r3, #24
 1424 00c8 3C219FE5 		ldr	r2, .L6
 1425 00cc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1426 00d0 0320C3E5 		strb	r2, [r3, #3]
 113:../reversi8_2018.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1427              		.loc 1 113 0
 1428 00d4 1C301BE5 		ldr	r3, [fp, #-28]
 1429 00d8 203083E2 		add	r3, r3, #32
 1430 00dc 28219FE5 		ldr	r2, .L6
 1431 00e0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1432 00e4 0420C3E5 		strb	r2, [r3, #4]
 114:../reversi8_2018.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1433              		.loc 1 114 0
 1434 00e8 1C301BE5 		ldr	r3, [fp, #-28]
 1435 00ec 183083E2 		add	r3, r3, #24
 1436 00f0 14219FE5 		ldr	r2, .L6
 1437 00f4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1438 00f8 0420C3E5 		strb	r2, [r3, #4]
 115:../reversi8_2018.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1439              		.loc 1 115 0
 1440 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 1441 0100 203083E2 		add	r3, r3, #32
 1442 0104 00219FE5 		ldr	r2, .L6
 1443 0108 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1444 010c 0320C3E5 		strb	r2, [r3, #3]
 116:../reversi8_2018.c **** 
 117:../reversi8_2018.c ****     // casillas a explorar:
 118:../reversi8_2018.c ****     candidatas[2][2] = SI;
 1445              		.loc 1 118 0
 1446 0110 1C301BE5 		ldr	r3, [fp, #-28]
 1447 0114 103083E2 		add	r3, r3, #16
 1448 0118 F0209FE5 		ldr	r2, .L6+4
 1449 011c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1450 0120 0220C3E5 		strb	r2, [r3, #2]
 119:../reversi8_2018.c ****     candidatas[2][3] = SI;
 1451              		.loc 1 119 0
 1452 0124 1C301BE5 		ldr	r3, [fp, #-28]
 1453 0128 103083E2 		add	r3, r3, #16
 1454 012c DC209FE5 		ldr	r2, .L6+4
 1455 0130 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1456 0134 0320C3E5 		strb	r2, [r3, #3]
 120:../reversi8_2018.c ****     candidatas[2][4] = SI;
 1457              		.loc 1 120 0
 1458 0138 1C301BE5 		ldr	r3, [fp, #-28]
 1459 013c 103083E2 		add	r3, r3, #16
 1460 0140 C8209FE5 		ldr	r2, .L6+4
 1461 0144 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1462 0148 0420C3E5 		strb	r2, [r3, #4]
 121:../reversi8_2018.c ****     candidatas[2][5] = SI;
 1463              		.loc 1 121 0
 1464 014c 1C301BE5 		ldr	r3, [fp, #-28]
 1465 0150 103083E2 		add	r3, r3, #16
 1466 0154 B4209FE5 		ldr	r2, .L6+4
 1467 0158 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1468 015c 0520C3E5 		strb	r2, [r3, #5]
 122:../reversi8_2018.c ****     candidatas[3][2] = SI;
 1469              		.loc 1 122 0
 1470 0160 1C301BE5 		ldr	r3, [fp, #-28]
 1471 0164 183083E2 		add	r3, r3, #24
 1472 0168 A0209FE5 		ldr	r2, .L6+4
 1473 016c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1474 0170 0220C3E5 		strb	r2, [r3, #2]
 123:../reversi8_2018.c ****     candidatas[3][5] = SI;
 1475              		.loc 1 123 0
 1476 0174 1C301BE5 		ldr	r3, [fp, #-28]
 1477 0178 183083E2 		add	r3, r3, #24
 1478 017c 8C209FE5 		ldr	r2, .L6+4
 1479 0180 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1480 0184 0520C3E5 		strb	r2, [r3, #5]
 124:../reversi8_2018.c ****     candidatas[4][2] = SI;
 1481              		.loc 1 124 0
 1482 0188 1C301BE5 		ldr	r3, [fp, #-28]
 1483 018c 203083E2 		add	r3, r3, #32
 1484 0190 78209FE5 		ldr	r2, .L6+4
 1485 0194 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1486 0198 0220C3E5 		strb	r2, [r3, #2]
 125:../reversi8_2018.c ****     candidatas[4][5] = SI;
 1487              		.loc 1 125 0
 1488 019c 1C301BE5 		ldr	r3, [fp, #-28]
 1489 01a0 203083E2 		add	r3, r3, #32
 1490 01a4 64209FE5 		ldr	r2, .L6+4
 1491 01a8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1492 01ac 0520C3E5 		strb	r2, [r3, #5]
 126:../reversi8_2018.c ****     candidatas[5][2] = SI;
 1493              		.loc 1 126 0
 1494 01b0 1C301BE5 		ldr	r3, [fp, #-28]
 1495 01b4 283083E2 		add	r3, r3, #40
 1496 01b8 50209FE5 		ldr	r2, .L6+4
 1497 01bc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1498 01c0 0220C3E5 		strb	r2, [r3, #2]
 127:../reversi8_2018.c ****     candidatas[5][3] = SI;
 1499              		.loc 1 127 0
 1500 01c4 1C301BE5 		ldr	r3, [fp, #-28]
 1501 01c8 283083E2 		add	r3, r3, #40
 1502 01cc 3C209FE5 		ldr	r2, .L6+4
 1503 01d0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1504 01d4 0320C3E5 		strb	r2, [r3, #3]
 128:../reversi8_2018.c ****     candidatas[5][4] = SI;
 1505              		.loc 1 128 0
 1506 01d8 1C301BE5 		ldr	r3, [fp, #-28]
 1507 01dc 283083E2 		add	r3, r3, #40
 1508 01e0 28209FE5 		ldr	r2, .L6+4
 1509 01e4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1510 01e8 0420C3E5 		strb	r2, [r3, #4]
 129:../reversi8_2018.c ****     candidatas[5][5] = SI;
 1511              		.loc 1 129 0
 1512 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 1513 01f0 283083E2 		add	r3, r3, #40
 1514 01f4 14209FE5 		ldr	r2, .L6+4
 1515 01f8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1516 01fc 0520C3E5 		strb	r2, [r3, #5]
 130:../reversi8_2018.c **** }
 1517              		.loc 1 130 0
 1518 0200 0CD04BE2 		sub	sp, fp, #12
 1519 0204 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1520 0208 1EFF2FE1 		bx	lr
 1521              	.L7:
 1522              		.align	2
 1523              	.L6:
 1524 020c 00000000 		.word	CASILLA_OCUPADA
 1525 0210 00000000 		.word	SI
 1526              		.cfi_endproc
 1527              	.LFE0:
 1529              		.align	2
 1530              		.global	esperar_mov
 1532              	esperar_mov:
 1533              	.LFB1:
 131:../reversi8_2018.c **** 
 132:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 133:../reversi8_2018.c **** // Espera a que ready valga 1.
 134:../reversi8_2018.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 135:../reversi8_2018.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 136:../reversi8_2018.c **** 
 137:../reversi8_2018.c **** void esperar_mov(uint8_t *ready)
 138:../reversi8_2018.c **** {
 1534              		.loc 1 138 0
 1535              		.cfi_startproc
 1536              		@ Function supports interworking.
 1537              		@ args = 0, pretend = 0, frame = 8
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539 0214 0DC0A0E1 		mov	ip, sp
 1540              	.LCFI2:
 1541              		.cfi_def_cfa_register 12
 1542 0218 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1543 021c 04B04CE2 		sub	fp, ip, #4
 1544              		.cfi_offset 14, -8
 1545              		.cfi_offset 13, -12
 1546              		.cfi_offset 11, -16
 1547              	.LCFI3:
 1548              		.cfi_def_cfa 11, 4
 1549 0220 08D04DE2 		sub	sp, sp, #8
 1550 0224 10000BE5 		str	r0, [fp, #-16]
 139:../reversi8_2018.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1551              		.loc 1 139 0
 1552 0228 0000A0E1 		mov	r0, r0	@ nop
 1553              	.L9:
 1554              		.loc 1 139 0 is_stmt 0 discriminator 1
 1555 022c 10301BE5 		ldr	r3, [fp, #-16]
 1556 0230 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1557 0234 000053E3 		cmp	r3, #0
 1558 0238 FBFFFF0A 		beq	.L9
 140:../reversi8_2018.c **** 
 141:../reversi8_2018.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1559              		.loc 1 141 0 is_stmt 1
 1560 023c 10301BE5 		ldr	r3, [fp, #-16]
 1561 0240 0020A0E3 		mov	r2, #0
 1562 0244 0020C3E5 		strb	r2, [r3, #0]
 142:../reversi8_2018.c **** }
 1563              		.loc 1 142 0
 1564 0248 0CD04BE2 		sub	sp, fp, #12
 1565 024c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1566 0250 1EFF2FE1 		bx	lr
 1567              		.cfi_endproc
 1568              	.LFE1:
 1570              		.align	2
 1571              		.global	ficha_valida
 1573              	ficha_valida:
 1574              	.LFB2:
 143:../reversi8_2018.c **** 
 144:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 145:../reversi8_2018.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 146:../reversi8_2018.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 147:../reversi8_2018.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 148:../reversi8_2018.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 149:../reversi8_2018.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 150:../reversi8_2018.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 151:../reversi8_2018.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 152:../reversi8_2018.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 153:../reversi8_2018.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 154:../reversi8_2018.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 155:../reversi8_2018.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 156:../reversi8_2018.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 157:../reversi8_2018.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 158:../reversi8_2018.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 159:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 160:../reversi8_2018.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 161:../reversi8_2018.c **** // Además informa si la posición es válida y contiene alguna ficha.
 162:../reversi8_2018.c **** // Esto lo hace por referencia (en *posicion_valida)
 163:../reversi8_2018.c **** // Si devuelve un 0 no es válida o está vacia.
 164:../reversi8_2018.c **** uint8_t ficha_valida(uint8_t tablero[][DIM], uint8_t f, uint8_t c, int *posicion_valida)
 165:../reversi8_2018.c **** {
 1575              		.loc 1 165 0
 1576              		.cfi_startproc
 1577              		@ Function supports interworking.
 1578              		@ args = 0, pretend = 0, frame = 24
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580 0254 0DC0A0E1 		mov	ip, sp
 1581              	.LCFI4:
 1582              		.cfi_def_cfa_register 12
 1583 0258 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1584 025c 04B04CE2 		sub	fp, ip, #4
 1585              		.cfi_offset 14, -8
 1586              		.cfi_offset 13, -12
 1587              		.cfi_offset 11, -16
 1588              	.LCFI5:
 1589              		.cfi_def_cfa 11, 4
 1590 0260 18D04DE2 		sub	sp, sp, #24
 1591 0264 18000BE5 		str	r0, [fp, #-24]
 1592 0268 20300BE5 		str	r3, [fp, #-32]
 1593 026c 0130A0E1 		mov	r3, r1
 1594 0270 19304BE5 		strb	r3, [fp, #-25]
 1595 0274 0230A0E1 		mov	r3, r2
 1596 0278 1A304BE5 		strb	r3, [fp, #-26]
 166:../reversi8_2018.c ****     uint8_t ficha;
 167:../reversi8_2018.c **** 
 168:../reversi8_2018.c ****     // ficha = tablero[f][c];
 169:../reversi8_2018.c ****     // no puede accederse a tablero[f][c]
 170:../reversi8_2018.c ****     // ya que algún índice puede ser negativo
 171:../reversi8_2018.c **** 
 172:../reversi8_2018.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1597              		.loc 1 172 0
 1598 027c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1599 0280 070053E3 		cmp	r3, #7
 1600 0284 1500008A 		bhi	.L11
 1601              		.loc 1 172 0 is_stmt 0 discriminator 1
 1602 0288 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1603 028c 070053E3 		cmp	r3, #7
 1604 0290 1200008A 		bhi	.L11
 1605 0294 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1606 0298 8331A0E1 		mov	r3, r3, asl #3
 1607 029c 18201BE5 		ldr	r2, [fp, #-24]
 1608 02a0 032082E0 		add	r2, r2, r3
 1609 02a4 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1610 02a8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1611 02ac 000053E3 		cmp	r3, #0
 1612 02b0 0A00000A 		beq	.L11
 173:../reversi8_2018.c ****     {
 174:../reversi8_2018.c ****         *posicion_valida = 1;
 1613              		.loc 1 174 0 is_stmt 1
 1614 02b4 20301BE5 		ldr	r3, [fp, #-32]
 1615 02b8 0120A0E3 		mov	r2, #1
 1616 02bc 002083E5 		str	r2, [r3, #0]
 175:../reversi8_2018.c ****         ficha = tablero[f][c];
 1617              		.loc 1 175 0
 1618 02c0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1619 02c4 8331A0E1 		mov	r3, r3, asl #3
 1620 02c8 18201BE5 		ldr	r2, [fp, #-24]
 1621 02cc 032082E0 		add	r2, r2, r3
 1622 02d0 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1623 02d4 0330D2E7 		ldrb	r3, [r2, r3]
 1624 02d8 0D304BE5 		strb	r3, [fp, #-13]
 1625 02dc 040000EA 		b	.L12
 1626              	.L11:
 176:../reversi8_2018.c ****     }
 177:../reversi8_2018.c ****     else
 178:../reversi8_2018.c ****     {
 179:../reversi8_2018.c ****         *posicion_valida = 0;
 1627              		.loc 1 179 0
 1628 02e0 20301BE5 		ldr	r3, [fp, #-32]
 1629 02e4 0020A0E3 		mov	r2, #0
 1630 02e8 002083E5 		str	r2, [r3, #0]
 180:../reversi8_2018.c ****         ficha = CASILLA_VACIA;
 1631              		.loc 1 180 0
 1632 02ec 0030A0E3 		mov	r3, #0
 1633 02f0 0D304BE5 		strb	r3, [fp, #-13]
 1634              	.L12:
 181:../reversi8_2018.c ****     }
 182:../reversi8_2018.c ****     return ficha;
 1635              		.loc 1 182 0
 1636 02f4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 183:../reversi8_2018.c **** }
 1637              		.loc 1 183 0
 1638 02f8 0300A0E1 		mov	r0, r3
 1639 02fc 0CD04BE2 		sub	sp, fp, #12
 1640 0300 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1641 0304 1EFF2FE1 		bx	lr
 1642              		.cfi_endproc
 1643              	.LFE2:
 1645              		.align	2
 1646              		.global	patron_volteo
 1648              	patron_volteo:
 1649              	.LFB3:
 184:../reversi8_2018.c **** 
 185:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 186:../reversi8_2018.c **** // La función patrón volteo es una función recursiva que busca el patrón de volteo
 187:../reversi8_2018.c **** // (n fichas del rival seguidas de una ficha del jugador actual) en una dirección determinada
 188:../reversi8_2018.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 189:../reversi8_2018.c **** // color indica el color de la pieza que se acaba de colocar
 190:../reversi8_2018.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 191:../reversi8_2018.c **** // FA y CA son la fila y columna a analizar
 192:../reversi8_2018.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 193:../reversi8_2018.c **** int patron_volteo(uint8_t tablero[][DIM], int *longitud, uint8_t FA, uint8_t CA, uint8_t SF, uint8_
 194:../reversi8_2018.c **** {
 1650              		.loc 1 194 0
 1651              		.cfi_startproc
 1652              		@ Function supports interworking.
 1653              		@ args = 12, pretend = 0, frame = 32
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655 0308 0DC0A0E1 		mov	ip, sp
 1656              	.LCFI6:
 1657              		.cfi_def_cfa_register 12
 1658 030c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1659 0310 04B04CE2 		sub	fp, ip, #4
 1660              		.cfi_offset 14, -8
 1661              		.cfi_offset 13, -12
 1662              		.cfi_offset 11, -16
 1663              	.LCFI7:
 1664              		.cfi_def_cfa 11, 4
 1665 0314 30D04DE2 		sub	sp, sp, #48
 1666 0318 20000BE5 		str	r0, [fp, #-32]
 1667 031c 24100BE5 		str	r1, [fp, #-36]
 1668 0320 25204BE5 		strb	r2, [fp, #-37]
 1669 0324 26304BE5 		strb	r3, [fp, #-38]
 195:../reversi8_2018.c ****     int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 196:../reversi8_2018.c ****     int patron; //indica si se ha encontrado un patrón o no
 197:../reversi8_2018.c ****     uint8_t casilla;   // casilla es la casilla que se lee del tablero
 198:../reversi8_2018.c ****     FA = FA + SF;
 1670              		.loc 1 198 0
 1671 0328 25205BE5 		ldrb	r2, [fp, #-37]
 1672 032c 0430DBE5 		ldrb	r3, [fp, #4]
 1673 0330 033082E0 		add	r3, r2, r3
 1674 0334 25304BE5 		strb	r3, [fp, #-37]
 199:../reversi8_2018.c ****     CA = CA + SC;
 1675              		.loc 1 199 0
 1676 0338 26205BE5 		ldrb	r2, [fp, #-38]
 1677 033c 0830DBE5 		ldrb	r3, [fp, #8]
 1678 0340 033082E0 		add	r3, r2, r3
 1679 0344 26304BE5 		strb	r3, [fp, #-38]
 200:../reversi8_2018.c ****     casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1680              		.loc 1 200 0
 1681 0348 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1682 034c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1683 0350 18304BE2 		sub	r3, fp, #24
 1684 0354 20001BE5 		ldr	r0, [fp, #-32]
 1685 0358 FEFFFFEB 		bl	ficha_valida
 1686 035c 0030A0E1 		mov	r3, r0
 1687 0360 0D304BE5 		strb	r3, [fp, #-13]
 201:../reversi8_2018.c ****     // mientras la casilla está en el tablero, no está vacía,
 202:../reversi8_2018.c ****     // y es del color rival seguimos buscando el patron de volteo
 203:../reversi8_2018.c ****     if ((posicion_valida == 1) && (casilla != color))
 1688              		.loc 1 203 0
 1689 0364 18301BE5 		ldr	r3, [fp, #-24]
 1690 0368 010053E3 		cmp	r3, #1
 1691 036c 1600001A 		bne	.L14
 1692              		.loc 1 203 0 is_stmt 0 discriminator 1
 1693 0370 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1694 0374 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1695 0378 030052E1 		cmp	r2, r3
 1696 037c 1200000A 		beq	.L14
 204:../reversi8_2018.c ****     {
 205:../reversi8_2018.c ****         *longitud = *longitud + 1;
 1697              		.loc 1 205 0 is_stmt 1
 1698 0380 24301BE5 		ldr	r3, [fp, #-36]
 1699 0384 003093E5 		ldr	r3, [r3, #0]
 1700 0388 012083E2 		add	r2, r3, #1
 1701 038c 24301BE5 		ldr	r3, [fp, #-36]
 1702 0390 002083E5 		str	r2, [r3, #0]
 206:../reversi8_2018.c ****         patron = patron_volteo(tablero, longitud, FA, CA, SF, SC, color);
 1703              		.loc 1 206 0
 1704 0394 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1705 0398 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1706 039c 0410DBE5 		ldrb	r1, [fp, #4]	@ zero_extendqisi2
 1707 03a0 00108DE5 		str	r1, [sp, #0]
 1708 03a4 0810DBE5 		ldrb	r1, [fp, #8]	@ zero_extendqisi2
 1709 03a8 04108DE5 		str	r1, [sp, #4]
 1710 03ac 0C10DBE5 		ldrb	r1, [fp, #12]	@ zero_extendqisi2
 1711 03b0 08108DE5 		str	r1, [sp, #8]
 1712 03b4 20001BE5 		ldr	r0, [fp, #-32]
 1713 03b8 24101BE5 		ldr	r1, [fp, #-36]
 1714 03bc FEFFFFEB 		bl	patron_volteo
 1715 03c0 14000BE5 		str	r0, [fp, #-20]
 207:../reversi8_2018.c ****         //printf("longitud: %d \n", *longitud);
 208:../reversi8_2018.c ****         //printf("fila: %d; columna: %d \n", FA, CA);
 209:../reversi8_2018.c ****         return patron;
 1716              		.loc 1 209 0
 1717 03c4 14301BE5 		ldr	r3, [fp, #-20]
 1718 03c8 0F0000EA 		b	.L15
 1719              	.L14:
 210:../reversi8_2018.c ****     }
 211:../reversi8_2018.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 212:../reversi8_2018.c ****     // entonces hemos encontrado el patrón
 213:../reversi8_2018.c ****     else if ((posicion_valida == 1) && (casilla == color))
 1720              		.loc 1 213 0
 1721 03cc 18301BE5 		ldr	r3, [fp, #-24]
 1722 03d0 010053E3 		cmp	r3, #1
 1723 03d4 0B00001A 		bne	.L16
 1724              		.loc 1 213 0 is_stmt 0 discriminator 1
 1725 03d8 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1726 03dc 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1727 03e0 030052E1 		cmp	r2, r3
 1728 03e4 0700001A 		bne	.L16
 214:../reversi8_2018.c ****     {
 215:../reversi8_2018.c ****         if (*longitud > 0) // longitud indica cuantas fichas hay que voltear
 1729              		.loc 1 215 0 is_stmt 1
 1730 03e8 24301BE5 		ldr	r3, [fp, #-36]
 1731 03ec 003093E5 		ldr	r3, [r3, #0]
 1732 03f0 000053E3 		cmp	r3, #0
 1733 03f4 010000DA 		ble	.L17
 216:../reversi8_2018.c ****             {
 217:../reversi8_2018.c ****             return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el pat
 1734              		.loc 1 217 0
 1735 03f8 0130A0E3 		mov	r3, #1
 1736 03fc 020000EA 		b	.L15
 1737              	.L17:
 218:../reversi8_2018.c ****             //printf("PATRON_ENCONTRADO \n");
 219:../reversi8_2018.c ****             }
 220:../reversi8_2018.c ****         else {
 221:../reversi8_2018.c ****             return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1738              		.loc 1 221 0
 1739 0400 0030A0E3 		mov	r3, #0
 1740 0404 000000EA 		b	.L15
 1741              	.L16:
 222:../reversi8_2018.c ****             //printf("NO_HAY_PATRON \n");
 223:../reversi8_2018.c ****             }
 224:../reversi8_2018.c ****     }
 225:../reversi8_2018.c ****     // en caso contrario es que no hay patrón
 226:../reversi8_2018.c ****     else
 227:../reversi8_2018.c ****     {
 228:../reversi8_2018.c ****         return NO_HAY_PATRON;
 1742              		.loc 1 228 0
 1743 0408 0030A0E3 		mov	r3, #0
 1744              	.L15:
 229:../reversi8_2018.c ****         //printf("NO_HAY_PATRON \n");
 230:../reversi8_2018.c ****     }
 231:../reversi8_2018.c **** }
 1745              		.loc 1 231 0
 1746 040c 0300A0E1 		mov	r0, r3
 1747 0410 0CD04BE2 		sub	sp, fp, #12
 1748 0414 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1749 0418 1EFF2FE1 		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE3:
 1753              		.align	2
 1754              		.global	voltear
 1756              	voltear:
 1757              	.LFB4:
 232:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 233:../reversi8_2018.c **** // voltea n fichas en la dirección que toque
 234:../reversi8_2018.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 235:../reversi8_2018.c **** // color indica el color de la pieza que se acaba de colocar
 236:../reversi8_2018.c **** // FA y CA son la fila y columna a analizar
 237:../reversi8_2018.c **** void voltear(uint8_t tablero[][DIM], uint8_t FA, uint8_t CA, uint8_t SF, uint8_t SC, int n, uint8_t
 238:../reversi8_2018.c **** {
 1758              		.loc 1 238 0
 1759              		.cfi_startproc
 1760              		@ Function supports interworking.
 1761              		@ args = 12, pretend = 0, frame = 16
 1762              		@ frame_needed = 1, uses_anonymous_args = 0
 1763 041c 0DC0A0E1 		mov	ip, sp
 1764              	.LCFI8:
 1765              		.cfi_def_cfa_register 12
 1766 0420 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1767 0424 04B04CE2 		sub	fp, ip, #4
 1768              		.cfi_offset 14, -8
 1769              		.cfi_offset 13, -12
 1770              		.cfi_offset 11, -16
 1771              	.LCFI9:
 1772              		.cfi_def_cfa 11, 4
 1773 0428 10D04DE2 		sub	sp, sp, #16
 1774 042c 18000BE5 		str	r0, [fp, #-24]
 1775 0430 19104BE5 		strb	r1, [fp, #-25]
 1776 0434 1A204BE5 		strb	r2, [fp, #-26]
 1777 0438 1B304BE5 		strb	r3, [fp, #-27]
 239:../reversi8_2018.c ****     int i;
 240:../reversi8_2018.c **** 
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1778              		.loc 1 241 0
 1779 043c 0030A0E3 		mov	r3, #0
 1780 0440 10300BE5 		str	r3, [fp, #-16]
 1781 0444 110000EA 		b	.L19
 1782              	.L20:
 242:../reversi8_2018.c ****     {
 243:../reversi8_2018.c ****         FA = FA + SF;
 1783              		.loc 1 243 0 discriminator 2
 1784 0448 19205BE5 		ldrb	r2, [fp, #-25]
 1785 044c 1B305BE5 		ldrb	r3, [fp, #-27]
 1786 0450 033082E0 		add	r3, r2, r3
 1787 0454 19304BE5 		strb	r3, [fp, #-25]
 244:../reversi8_2018.c ****         CA = CA + SC;
 1788              		.loc 1 244 0 discriminator 2
 1789 0458 1A205BE5 		ldrb	r2, [fp, #-26]
 1790 045c 0430DBE5 		ldrb	r3, [fp, #4]
 1791 0460 033082E0 		add	r3, r2, r3
 1792 0464 1A304BE5 		strb	r3, [fp, #-26]
 245:../reversi8_2018.c ****         tablero[FA][CA] = color;
 1793              		.loc 1 245 0 discriminator 2
 1794 0468 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1795 046c 8331A0E1 		mov	r3, r3, asl #3
 1796 0470 18201BE5 		ldr	r2, [fp, #-24]
 1797 0474 032082E0 		add	r2, r2, r3
 1798 0478 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1799 047c 0C10DBE5 		ldrb	r1, [fp, #12]
 1800 0480 0310C2E7 		strb	r1, [r2, r3]
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1801              		.loc 1 241 0 discriminator 2
 1802 0484 10301BE5 		ldr	r3, [fp, #-16]
 1803 0488 013083E2 		add	r3, r3, #1
 1804 048c 10300BE5 		str	r3, [fp, #-16]
 1805              	.L19:
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1806              		.loc 1 241 0 is_stmt 0 discriminator 1
 1807 0490 10201BE5 		ldr	r2, [fp, #-16]
 1808 0494 08309BE5 		ldr	r3, [fp, #8]
 1809 0498 030052E1 		cmp	r2, r3
 1810 049c E9FFFFBA 		blt	.L20
 246:../reversi8_2018.c ****     }
 247:../reversi8_2018.c **** }
 1811              		.loc 1 247 0 is_stmt 1
 1812 04a0 0CD04BE2 		sub	sp, fp, #12
 1813 04a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1814 04a8 1EFF2FE1 		bx	lr
 1815              		.cfi_endproc
 1816              	.LFE4:
 1818              		.align	2
 1819              		.global	actualizar_tablero
 1821              	actualizar_tablero:
 1822              	.LFB5:
 248:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 249:../reversi8_2018.c **** // comprueba si hay que actualizar alguna ficha
 250:../reversi8_2018.c **** // no comprueba que el movimiento realizado sea válido
 251:../reversi8_2018.c **** // f y c son la fila y columna a analizar
 252:../reversi8_2018.c **** // uint8_t vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 253:../reversi8_2018.c **** // uint8_t vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 254:../reversi8_2018.c **** int actualizar_tablero(uint8_t tablero[][DIM], uint8_t f, uint8_t c, uint8_t color)
 255:../reversi8_2018.c **** {
 1823              		.loc 1 255 0
 1824              		.cfi_startproc
 1825              		@ Function supports interworking.
 1826              		@ args = 0, pretend = 0, frame = 24
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828 04ac 0DC0A0E1 		mov	ip, sp
 1829              	.LCFI10:
 1830              		.cfi_def_cfa_register 12
 1831 04b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1832 04b4 04B04CE2 		sub	fp, ip, #4
 1833              		.cfi_offset 14, -8
 1834              		.cfi_offset 13, -12
 1835              		.cfi_offset 11, -16
 1836              	.LCFI11:
 1837              		.cfi_def_cfa 11, 4
 1838 04b8 28D04DE2 		sub	sp, sp, #40
 1839 04bc 20000BE5 		str	r0, [fp, #-32]
 1840 04c0 21104BE5 		strb	r1, [fp, #-33]
 1841 04c4 22204BE5 		strb	r2, [fp, #-34]
 1842 04c8 23304BE5 		strb	r3, [fp, #-35]
 256:../reversi8_2018.c ****     uint8_t SF, SC; // cantidades a sumar para movernos en la dirección que toque
 257:../reversi8_2018.c ****     int i, flip, patron;
 258:../reversi8_2018.c **** 
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1843              		.loc 1 259 0
 1844 04cc 0030A0E3 		mov	r3, #0
 1845 04d0 10300BE5 		str	r3, [fp, #-16]
 1846 04d4 280000EA 		b	.L22
 1847              	.L24:
 260:../reversi8_2018.c ****     {
 261:../reversi8_2018.c ****         SF = vSF[i];
 1848              		.loc 1 261 0
 1849 04d8 BC209FE5 		ldr	r2, .L25
 1850 04dc 10301BE5 		ldr	r3, [fp, #-16]
 1851 04e0 033082E0 		add	r3, r2, r3
 1852 04e4 0030D3E5 		ldrb	r3, [r3, #0]
 1853 04e8 11304BE5 		strb	r3, [fp, #-17]
 262:../reversi8_2018.c ****         SC = vSC[i];
 1854              		.loc 1 262 0
 1855 04ec AC209FE5 		ldr	r2, .L25+4
 1856 04f0 10301BE5 		ldr	r3, [fp, #-16]
 1857 04f4 033082E0 		add	r3, r2, r3
 1858 04f8 0030D3E5 		ldrb	r3, [r3, #0]
 1859 04fc 12304BE5 		strb	r3, [fp, #-18]
 263:../reversi8_2018.c ****         // flip: numero de fichas a voltear
 264:../reversi8_2018.c ****         flip = 0;
 1860              		.loc 1 264 0
 1861 0500 0030A0E3 		mov	r3, #0
 1862 0504 1C300BE5 		str	r3, [fp, #-28]
 265:../reversi8_2018.c ****         patron = patron_volteo_arm_c(tablero, &flip, f, c, SF, SC, color);
 1863              		.loc 1 265 0
 1864 0508 1C104BE2 		sub	r1, fp, #28
 1865 050c 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1866 0510 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1867 0514 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1868 0518 00008DE5 		str	r0, [sp, #0]
 1869 051c 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1870 0520 04008DE5 		str	r0, [sp, #4]
 1871 0524 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1872 0528 08008DE5 		str	r0, [sp, #8]
 1873 052c 20001BE5 		ldr	r0, [fp, #-32]
 1874 0530 FEFFFFEB 		bl	patron_volteo_arm_c
 1875 0534 18000BE5 		str	r0, [fp, #-24]
 266:../reversi8_2018.c ****         //printf("Flip: %d \n", flip);
 267:../reversi8_2018.c ****         if (patron == PATRON_ENCONTRADO )
 1876              		.loc 1 267 0
 1877 0538 18301BE5 		ldr	r3, [fp, #-24]
 1878 053c 010053E3 		cmp	r3, #1
 1879 0540 0A00001A 		bne	.L23
 268:../reversi8_2018.c ****         {
 269:../reversi8_2018.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1880              		.loc 1 269 0
 1881 0544 1C001BE5 		ldr	r0, [fp, #-28]
 1882 0548 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1883 054c 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1884 0550 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1885 0554 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1886 0558 00C08DE5 		str	ip, [sp, #0]
 1887 055c 04008DE5 		str	r0, [sp, #4]
 1888 0560 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1889 0564 08008DE5 		str	r0, [sp, #8]
 1890 0568 20001BE5 		ldr	r0, [fp, #-32]
 1891 056c FEFFFFEB 		bl	voltear
 1892              	.L23:
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1893              		.loc 1 259 0
 1894 0570 10301BE5 		ldr	r3, [fp, #-16]
 1895 0574 013083E2 		add	r3, r3, #1
 1896 0578 10300BE5 		str	r3, [fp, #-16]
 1897              	.L22:
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1898              		.loc 1 259 0 is_stmt 0 discriminator 1
 1899 057c 10301BE5 		ldr	r3, [fp, #-16]
 1900 0580 070053E3 		cmp	r3, #7
 1901 0584 D3FFFFDA 		ble	.L24
 270:../reversi8_2018.c ****         }
 271:../reversi8_2018.c ****     }
 272:../reversi8_2018.c ****     return 0;
 1902              		.loc 1 272 0 is_stmt 1
 1903 0588 0030A0E3 		mov	r3, #0
 273:../reversi8_2018.c **** }
 1904              		.loc 1 273 0
 1905 058c 0300A0E1 		mov	r0, r3
 1906 0590 0CD04BE2 		sub	sp, fp, #12
 1907 0594 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1908 0598 1EFF2FE1 		bx	lr
 1909              	.L26:
 1910              		.align	2
 1911              	.L25:
 1912 059c 00000000 		.word	vSF
 1913 05a0 00000000 		.word	vSC
 1914              		.cfi_endproc
 1915              	.LFE5:
 1917              		.align	2
 1918              		.global	elegir_mov
 1920              	elegir_mov:
 1921              	.LFB6:
 274:../reversi8_2018.c **** 
 275:../reversi8_2018.c **** /////////////////////////////////////////////////////////////////////////////////
 276:../reversi8_2018.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 277:../reversi8_2018.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 278:../reversi8_2018.c **** // que se ha encontrado la guarda
 279:../reversi8_2018.c **** // Al acabar escribe el movimiento seleccionado en f y c
 280:../reversi8_2018.c **** 
 281:../reversi8_2018.c **** // Candidatas
 282:../reversi8_2018.c **** // NO    0
 283:../reversi8_2018.c **** // SI    1
 284:../reversi8_2018.c **** // CASILLA_OCUPADA 2
 285:../reversi8_2018.c **** int elegir_mov(uint8_t candidatas[][DIM], uint8_t tablero[][DIM], uint8_t *f, uint8_t *c)
 286:../reversi8_2018.c **** {
 1922              		.loc 1 286 0
 1923              		.cfi_startproc
 1924              		@ Function supports interworking.
 1925              		@ args = 0, pretend = 0, frame = 56
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927 05a4 0DC0A0E1 		mov	ip, sp
 1928              	.LCFI12:
 1929              		.cfi_def_cfa_register 12
 1930 05a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1931 05ac 04B04CE2 		sub	fp, ip, #4
 1932              		.cfi_offset 14, -8
 1933              		.cfi_offset 13, -12
 1934              		.cfi_offset 11, -16
 1935              	.LCFI13:
 1936              		.cfi_def_cfa 11, 4
 1937 05b0 48D04DE2 		sub	sp, sp, #72
 1938 05b4 38000BE5 		str	r0, [fp, #-56]
 1939 05b8 3C100BE5 		str	r1, [fp, #-60]
 1940 05bc 40200BE5 		str	r2, [fp, #-64]
 1941 05c0 44300BE5 		str	r3, [fp, #-68]
 287:../reversi8_2018.c ****     int i, j, k, found;
 288:../reversi8_2018.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1942              		.loc 1 288 0
 1943 05c4 0030E0E3 		mvn	r3, #0
 1944 05c8 20300BE5 		str	r3, [fp, #-32]
 289:../reversi8_2018.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 290:../reversi8_2018.c ****     uint8_t mejor = 0; // almacena el mejor valor encontrado
 1945              		.loc 1 290 0
 1946 05cc 0030A0E3 		mov	r3, #0
 1947 05d0 25304BE5 		strb	r3, [fp, #-37]
 291:../reversi8_2018.c ****     int patron, longitud;
 292:../reversi8_2018.c ****     uint8_t SF, SC; // cantidades a sumar para movernos en la dirección que toque
 293:../reversi8_2018.c **** 
 294:../reversi8_2018.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 295:../reversi8_2018.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1948              		.loc 1 296 0
 1949 05d4 0030A0E3 		mov	r3, #0
 1950 05d8 10300BE5 		str	r3, [fp, #-16]
 1951 05dc 620000EA 		b	.L28
 1952              	.L35:
 297:../reversi8_2018.c ****     {
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1953              		.loc 1 298 0
 1954 05e0 0030A0E3 		mov	r3, #0
 1955 05e4 14300BE5 		str	r3, [fp, #-20]
 1956 05e8 590000EA 		b	.L29
 1957              	.L34:
 299:../reversi8_2018.c ****         {   // indica en qué casillas quizá se pueda mover
 300:../reversi8_2018.c ****             if (candidatas[i][j] == SI)
 1958              		.loc 1 300 0
 1959 05ec 10301BE5 		ldr	r3, [fp, #-16]
 1960 05f0 8331A0E1 		mov	r3, r3, asl #3
 1961 05f4 38201BE5 		ldr	r2, [fp, #-56]
 1962 05f8 032082E0 		add	r2, r2, r3
 1963 05fc 14301BE5 		ldr	r3, [fp, #-20]
 1964 0600 033082E0 		add	r3, r2, r3
 1965 0604 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1966 0608 9C319FE5 		ldr	r3, .L36
 1967 060c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1968 0610 030052E1 		cmp	r2, r3
 1969 0614 4B00001A 		bne	.L30
 301:../reversi8_2018.c ****             {
 302:../reversi8_2018.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1970              		.loc 1 302 0
 1971 0618 10301BE5 		ldr	r3, [fp, #-16]
 1972 061c 8331A0E1 		mov	r3, r3, asl #3
 1973 0620 3C201BE5 		ldr	r2, [fp, #-60]
 1974 0624 032082E0 		add	r2, r2, r3
 1975 0628 14301BE5 		ldr	r3, [fp, #-20]
 1976 062c 033082E0 		add	r3, r2, r3
 1977 0630 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1978 0634 000053E3 		cmp	r3, #0
 1979 0638 4200001A 		bne	.L30
 303:../reversi8_2018.c ****                 {
 304:../reversi8_2018.c ****                     found = 0;
 1980              		.loc 1 304 0
 1981 063c 0030A0E3 		mov	r3, #0
 1982 0640 1C300BE5 		str	r3, [fp, #-28]
 305:../reversi8_2018.c ****                     k = 0;
 1983              		.loc 1 305 0
 1984 0644 0030A0E3 		mov	r3, #0
 1985 0648 18300BE5 		str	r3, [fp, #-24]
 306:../reversi8_2018.c **** 
 307:../reversi8_2018.c ****                     // en este bucle comprobamos si es un movimiento válido
 308:../reversi8_2018.c ****                     // (es decir si implica voltear en alguna dirección)
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 1986              		.loc 1 309 0
 1987 064c 370000EA 		b	.L31
 1988              	.L33:
 310:../reversi8_2018.c ****                     {
 311:../reversi8_2018.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 1989              		.loc 1 311 0
 1990 0650 58219FE5 		ldr	r2, .L36+4
 1991 0654 18301BE5 		ldr	r3, [fp, #-24]
 1992 0658 033082E0 		add	r3, r2, r3
 1993 065c 0030D3E5 		ldrb	r3, [r3, #0]
 1994 0660 26304BE5 		strb	r3, [fp, #-38]
 312:../reversi8_2018.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 1995              		.loc 1 312 0
 1996 0664 48219FE5 		ldr	r2, .L36+8
 1997 0668 18301BE5 		ldr	r3, [fp, #-24]
 1998 066c 033082E0 		add	r3, r2, r3
 1999 0670 0030D3E5 		ldrb	r3, [r3, #0]
 2000 0674 27304BE5 		strb	r3, [fp, #-39]
 313:../reversi8_2018.c **** 
 314:../reversi8_2018.c ****                         // nos dice qué hay que voltear en cada dirección
 315:../reversi8_2018.c ****                         longitud = 0;
 2001              		.loc 1 315 0
 2002 0678 0030A0E3 		mov	r3, #0
 2003 067c 30300BE5 		str	r3, [fp, #-48]
 316:../reversi8_2018.c ****                         patron = patron_volteo_arm_c(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA
 2004              		.loc 1 316 0
 2005 0680 10301BE5 		ldr	r3, [fp, #-16]
 2006 0684 FF2003E2 		and	r2, r3, #255
 2007 0688 14301BE5 		ldr	r3, [fp, #-20]
 2008 068c FF3003E2 		and	r3, r3, #255
 2009 0690 30104BE2 		sub	r1, fp, #48
 2010 0694 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 2011 0698 00008DE5 		str	r0, [sp, #0]
 2012 069c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 2013 06a0 04008DE5 		str	r0, [sp, #4]
 2014 06a4 0100A0E3 		mov	r0, #1
 2015 06a8 08008DE5 		str	r0, [sp, #8]
 2016 06ac 3C001BE5 		ldr	r0, [fp, #-60]
 2017 06b0 FEFFFFEB 		bl	patron_volteo_arm_c
 2018 06b4 2C000BE5 		str	r0, [fp, #-44]
 317:../reversi8_2018.c ****                         //  //printf("%d ", patron);
 318:../reversi8_2018.c ****                         if (patron == PATRON_ENCONTRADO)
 2019              		.loc 1 318 0
 2020 06b8 2C301BE5 		ldr	r3, [fp, #-44]
 2021 06bc 010053E3 		cmp	r3, #1
 2022 06c0 1700001A 		bne	.L32
 319:../reversi8_2018.c ****                         {
 320:../reversi8_2018.c ****                             found = 1;
 2023              		.loc 1 320 0
 2024 06c4 0130A0E3 		mov	r3, #1
 2025 06c8 1C300BE5 		str	r3, [fp, #-28]
 321:../reversi8_2018.c ****                             if (tabla_valor[i][j] > mejor)
 2026              		.loc 1 321 0
 2027 06cc E4209FE5 		ldr	r2, .L36+12
 2028 06d0 10301BE5 		ldr	r3, [fp, #-16]
 2029 06d4 8311A0E1 		mov	r1, r3, asl #3
 2030 06d8 14301BE5 		ldr	r3, [fp, #-20]
 2031 06dc 033081E0 		add	r3, r1, r3
 2032 06e0 033082E0 		add	r3, r2, r3
 2033 06e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2034 06e8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 2035 06ec 030052E1 		cmp	r2, r3
 2036 06f0 0B00002A 		bcs	.L32
 322:../reversi8_2018.c ****                             {
 323:../reversi8_2018.c ****                                 mf = i;
 2037              		.loc 1 323 0
 2038 06f4 10301BE5 		ldr	r3, [fp, #-16]
 2039 06f8 20300BE5 		str	r3, [fp, #-32]
 324:../reversi8_2018.c ****                                 mc = j;
 2040              		.loc 1 324 0
 2041 06fc 14301BE5 		ldr	r3, [fp, #-20]
 2042 0700 24300BE5 		str	r3, [fp, #-36]
 325:../reversi8_2018.c ****                                 mejor = tabla_valor[i][j];
 2043              		.loc 1 325 0
 2044 0704 AC209FE5 		ldr	r2, .L36+12
 2045 0708 10301BE5 		ldr	r3, [fp, #-16]
 2046 070c 8311A0E1 		mov	r1, r3, asl #3
 2047 0710 14301BE5 		ldr	r3, [fp, #-20]
 2048 0714 033081E0 		add	r3, r1, r3
 2049 0718 033082E0 		add	r3, r2, r3
 2050 071c 0030D3E5 		ldrb	r3, [r3, #0]
 2051 0720 25304BE5 		strb	r3, [fp, #-37]
 2052              	.L32:
 326:../reversi8_2018.c ****                             }
 327:../reversi8_2018.c ****                         }
 328:../reversi8_2018.c ****                         k++;
 2053              		.loc 1 328 0
 2054 0724 18301BE5 		ldr	r3, [fp, #-24]
 2055 0728 013083E2 		add	r3, r3, #1
 2056 072c 18300BE5 		str	r3, [fp, #-24]
 2057              	.L31:
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 2058              		.loc 1 309 0 discriminator 1
 2059 0730 1C301BE5 		ldr	r3, [fp, #-28]
 2060 0734 000053E3 		cmp	r3, #0
 2061 0738 0200001A 		bne	.L30
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 2062              		.loc 1 309 0 is_stmt 0 discriminator 2
 2063 073c 18301BE5 		ldr	r3, [fp, #-24]
 2064 0740 070053E3 		cmp	r3, #7
 2065 0744 C1FFFFDA 		ble	.L33
 2066              	.L30:
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 2067              		.loc 1 298 0 is_stmt 1
 2068 0748 14301BE5 		ldr	r3, [fp, #-20]
 2069 074c 013083E2 		add	r3, r3, #1
 2070 0750 14300BE5 		str	r3, [fp, #-20]
 2071              	.L29:
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 2072              		.loc 1 298 0 is_stmt 0 discriminator 1
 2073 0754 14301BE5 		ldr	r3, [fp, #-20]
 2074 0758 070053E3 		cmp	r3, #7
 2075 075c A2FFFFDA 		ble	.L34
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 2076              		.loc 1 296 0 is_stmt 1
 2077 0760 10301BE5 		ldr	r3, [fp, #-16]
 2078 0764 013083E2 		add	r3, r3, #1
 2079 0768 10300BE5 		str	r3, [fp, #-16]
 2080              	.L28:
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 2081              		.loc 1 296 0 is_stmt 0 discriminator 1
 2082 076c 10301BE5 		ldr	r3, [fp, #-16]
 2083 0770 070053E3 		cmp	r3, #7
 2084 0774 99FFFFDA 		ble	.L35
 329:../reversi8_2018.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 330:../reversi8_2018.c ****                     }
 331:../reversi8_2018.c ****                 }
 332:../reversi8_2018.c ****             }
 333:../reversi8_2018.c ****         }
 334:../reversi8_2018.c ****     }
 335:../reversi8_2018.c ****     *f = (uint8_t) mf;
 2085              		.loc 1 335 0 is_stmt 1
 2086 0778 20301BE5 		ldr	r3, [fp, #-32]
 2087 077c FF2003E2 		and	r2, r3, #255
 2088 0780 40301BE5 		ldr	r3, [fp, #-64]
 2089 0784 0020C3E5 		strb	r2, [r3, #0]
 336:../reversi8_2018.c ****     *c = (uint8_t) mc;
 2090              		.loc 1 336 0
 2091 0788 24301BE5 		ldr	r3, [fp, #-36]
 2092 078c FF2003E2 		and	r2, r3, #255
 2093 0790 44301BE5 		ldr	r3, [fp, #-68]
 2094 0794 0020C3E5 		strb	r2, [r3, #0]
 337:../reversi8_2018.c ****     // si no se ha encontrado una posición válida devuelve -1
 338:../reversi8_2018.c ****     return mf;
 2095              		.loc 1 338 0
 2096 0798 20301BE5 		ldr	r3, [fp, #-32]
 339:../reversi8_2018.c **** }
 2097              		.loc 1 339 0
 2098 079c 0300A0E1 		mov	r0, r3
 2099 07a0 0CD04BE2 		sub	sp, fp, #12
 2100 07a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2101 07a8 1EFF2FE1 		bx	lr
 2102              	.L37:
 2103              		.align	2
 2104              	.L36:
 2105 07ac 00000000 		.word	SI
 2106 07b0 00000000 		.word	vSF
 2107 07b4 00000000 		.word	vSC
 2108 07b8 08000000 		.word	tabla_valor
 2109              		.cfi_endproc
 2110              	.LFE6:
 2112              		.align	2
 2113              		.global	contar
 2115              	contar:
 2116              	.LFB7:
 340:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 341:../reversi8_2018.c **** // Cuenta el número de fichas de cada color.
 342:../reversi8_2018.c **** // Los guarda en la dirección b (blancas) y n (negras)
 343:../reversi8_2018.c **** void contar(uint8_t tablero[][DIM], int *b, int *n)
 344:../reversi8_2018.c **** {
 2117              		.loc 1 344 0
 2118              		.cfi_startproc
 2119              		@ Function supports interworking.
 2120              		@ args = 0, pretend = 0, frame = 24
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122 07bc 0DC0A0E1 		mov	ip, sp
 2123              	.LCFI14:
 2124              		.cfi_def_cfa_register 12
 2125 07c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2126 07c4 04B04CE2 		sub	fp, ip, #4
 2127              		.cfi_offset 14, -8
 2128              		.cfi_offset 13, -12
 2129              		.cfi_offset 11, -16
 2130              	.LCFI15:
 2131              		.cfi_def_cfa 11, 4
 2132 07c8 18D04DE2 		sub	sp, sp, #24
 2133 07cc 18000BE5 		str	r0, [fp, #-24]
 2134 07d0 1C100BE5 		str	r1, [fp, #-28]
 2135 07d4 20200BE5 		str	r2, [fp, #-32]
 345:../reversi8_2018.c ****     int i,j;
 346:../reversi8_2018.c **** 
 347:../reversi8_2018.c ****     *b = 0;
 2136              		.loc 1 347 0
 2137 07d8 1C301BE5 		ldr	r3, [fp, #-28]
 2138 07dc 0020A0E3 		mov	r2, #0
 2139 07e0 002083E5 		str	r2, [r3, #0]
 348:../reversi8_2018.c ****     *n = 0;
 2140              		.loc 1 348 0
 2141 07e4 20301BE5 		ldr	r3, [fp, #-32]
 2142 07e8 0020A0E3 		mov	r2, #0
 2143 07ec 002083E5 		str	r2, [r3, #0]
 349:../reversi8_2018.c **** 
 350:../reversi8_2018.c ****     // recorremos todo el tablero contando las fichas de cada color
 351:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 2144              		.loc 1 351 0
 2145 07f0 0030A0E3 		mov	r3, #0
 2146 07f4 10300BE5 		str	r3, [fp, #-16]
 2147 07f8 280000EA 		b	.L39
 2148              	.L44:
 352:../reversi8_2018.c ****     {
 353:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 2149              		.loc 1 353 0
 2150 07fc 0030A0E3 		mov	r3, #0
 2151 0800 14300BE5 		str	r3, [fp, #-20]
 2152 0804 1F0000EA 		b	.L40
 2153              	.L43:
 354:../reversi8_2018.c ****         {
 355:../reversi8_2018.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2154              		.loc 1 355 0
 2155 0808 10301BE5 		ldr	r3, [fp, #-16]
 2156 080c 8331A0E1 		mov	r3, r3, asl #3
 2157 0810 18201BE5 		ldr	r2, [fp, #-24]
 2158 0814 032082E0 		add	r2, r2, r3
 2159 0818 14301BE5 		ldr	r3, [fp, #-20]
 2160 081c 033082E0 		add	r3, r2, r3
 2161 0820 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2162 0824 010053E3 		cmp	r3, #1
 2163 0828 0500001A 		bne	.L41
 356:../reversi8_2018.c ****             {
 357:../reversi8_2018.c ****                 (*b)++;
 2164              		.loc 1 357 0
 2165 082c 1C301BE5 		ldr	r3, [fp, #-28]
 2166 0830 003093E5 		ldr	r3, [r3, #0]
 2167 0834 012083E2 		add	r2, r3, #1
 2168 0838 1C301BE5 		ldr	r3, [fp, #-28]
 2169 083c 002083E5 		str	r2, [r3, #0]
 2170 0840 0D0000EA 		b	.L42
 2171              	.L41:
 358:../reversi8_2018.c ****             }
 359:../reversi8_2018.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 2172              		.loc 1 359 0
 2173 0844 10301BE5 		ldr	r3, [fp, #-16]
 2174 0848 8331A0E1 		mov	r3, r3, asl #3
 2175 084c 18201BE5 		ldr	r2, [fp, #-24]
 2176 0850 032082E0 		add	r2, r2, r3
 2177 0854 14301BE5 		ldr	r3, [fp, #-20]
 2178 0858 033082E0 		add	r3, r2, r3
 2179 085c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2180 0860 020053E3 		cmp	r3, #2
 2181 0864 0400001A 		bne	.L42
 360:../reversi8_2018.c ****             {
 361:../reversi8_2018.c ****                 (*n)++;
 2182              		.loc 1 361 0
 2183 0868 20301BE5 		ldr	r3, [fp, #-32]
 2184 086c 003093E5 		ldr	r3, [r3, #0]
 2185 0870 012083E2 		add	r2, r3, #1
 2186 0874 20301BE5 		ldr	r3, [fp, #-32]
 2187 0878 002083E5 		str	r2, [r3, #0]
 2188              	.L42:
 353:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 2189              		.loc 1 353 0
 2190 087c 14301BE5 		ldr	r3, [fp, #-20]
 2191 0880 013083E2 		add	r3, r3, #1
 2192 0884 14300BE5 		str	r3, [fp, #-20]
 2193              	.L40:
 353:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 2194              		.loc 1 353 0 is_stmt 0 discriminator 1
 2195 0888 14301BE5 		ldr	r3, [fp, #-20]
 2196 088c 070053E3 		cmp	r3, #7
 2197 0890 DCFFFFDA 		ble	.L43
 351:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 2198              		.loc 1 351 0 is_stmt 1
 2199 0894 10301BE5 		ldr	r3, [fp, #-16]
 2200 0898 013083E2 		add	r3, r3, #1
 2201 089c 10300BE5 		str	r3, [fp, #-16]
 2202              	.L39:
 351:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 2203              		.loc 1 351 0 is_stmt 0 discriminator 1
 2204 08a0 10301BE5 		ldr	r3, [fp, #-16]
 2205 08a4 070053E3 		cmp	r3, #7
 2206 08a8 D3FFFFDA 		ble	.L44
 362:../reversi8_2018.c ****             }
 363:../reversi8_2018.c ****         }
 364:../reversi8_2018.c ****     }
 365:../reversi8_2018.c **** }
 2207              		.loc 1 365 0 is_stmt 1
 2208 08ac 0CD04BE2 		sub	sp, fp, #12
 2209 08b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2210 08b4 1EFF2FE1 		bx	lr
 2211              		.cfi_endproc
 2212              	.LFE7:
 2214              		.align	2
 2215              		.global	actualizar_candidatas
 2217              	actualizar_candidatas:
 2218              	.LFB8:
 366:../reversi8_2018.c **** 
 367:../reversi8_2018.c **** void actualizar_candidatas(uint8_t candidatas[][DIM], uint8_t f, uint8_t c)
 368:../reversi8_2018.c **** {
 2219              		.loc 1 368 0
 2220              		.cfi_startproc
 2221              		@ Function supports interworking.
 2222              		@ args = 0, pretend = 0, frame = 8
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224 08b8 0DC0A0E1 		mov	ip, sp
 2225              	.LCFI16:
 2226              		.cfi_def_cfa_register 12
 2227 08bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2228 08c0 04B04CE2 		sub	fp, ip, #4
 2229              		.cfi_offset 14, -8
 2230              		.cfi_offset 13, -12
 2231              		.cfi_offset 11, -16
 2232              	.LCFI17:
 2233              		.cfi_def_cfa 11, 4
 2234 08c4 08D04DE2 		sub	sp, sp, #8
 2235 08c8 10000BE5 		str	r0, [fp, #-16]
 2236 08cc 0230A0E1 		mov	r3, r2
 2237 08d0 0120A0E1 		mov	r2, r1
 2238 08d4 11204BE5 		strb	r2, [fp, #-17]
 2239 08d8 12304BE5 		strb	r3, [fp, #-18]
 369:../reversi8_2018.c ****     // donde ya se ha colocado no se puede volver a colocar
 370:../reversi8_2018.c ****     // En las posiciones alrededor sí
 371:../reversi8_2018.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2240              		.loc 1 371 0
 2241 08dc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2242 08e0 8331A0E1 		mov	r3, r3, asl #3
 2243 08e4 10201BE5 		ldr	r2, [fp, #-16]
 2244 08e8 032082E0 		add	r2, r2, r3
 2245 08ec 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2246 08f0 10139FE5 		ldr	r1, .L54
 2247 08f4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2248 08f8 0310C2E7 		strb	r1, [r2, r3]
 372:../reversi8_2018.c ****     if (f > 0)
 2249              		.loc 1 372 0
 2250 08fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2251 0900 000053E3 		cmp	r3, #0
 2252 0904 4500000A 		beq	.L46
 373:../reversi8_2018.c ****     {
 374:../reversi8_2018.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2253              		.loc 1 374 0
 2254 0908 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2255 090c 013043E2 		sub	r3, r3, #1
 2256 0910 8331A0E1 		mov	r3, r3, asl #3
 2257 0914 10201BE5 		ldr	r2, [fp, #-16]
 2258 0918 032082E0 		add	r2, r2, r3
 2259 091c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2260 0920 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2261 0924 DC329FE5 		ldr	r3, .L54
 2262 0928 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2263 092c 030052E1 		cmp	r2, r3
 2264 0930 0800000A 		beq	.L47
 375:../reversi8_2018.c ****             candidatas[f-1][c] = SI;
 2265              		.loc 1 375 0
 2266 0934 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2267 0938 013043E2 		sub	r3, r3, #1
 2268 093c 8331A0E1 		mov	r3, r3, asl #3
 2269 0940 10201BE5 		ldr	r2, [fp, #-16]
 2270 0944 032082E0 		add	r2, r2, r3
 2271 0948 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2272 094c B8129FE5 		ldr	r1, .L54+4
 2273 0950 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2274 0954 0310C2E7 		strb	r1, [r2, r3]
 2275              	.L47:
 376:../reversi8_2018.c **** 
 377:../reversi8_2018.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2276              		.loc 1 377 0
 2277 0958 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2278 095c 000053E3 		cmp	r3, #0
 2279 0960 1500000A 		beq	.L48
 2280              		.loc 1 377 0 is_stmt 0 discriminator 1
 2281 0964 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2282 0968 013043E2 		sub	r3, r3, #1
 2283 096c 8331A0E1 		mov	r3, r3, asl #3
 2284 0970 10201BE5 		ldr	r2, [fp, #-16]
 2285 0974 032082E0 		add	r2, r2, r3
 2286 0978 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2287 097c 013043E2 		sub	r3, r3, #1
 2288 0980 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2289 0984 7C329FE5 		ldr	r3, .L54
 2290 0988 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2291 098c 030052E1 		cmp	r2, r3
 2292 0990 0900000A 		beq	.L48
 378:../reversi8_2018.c ****             candidatas[f-1][c-1] = SI;
 2293              		.loc 1 378 0 is_stmt 1
 2294 0994 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2295 0998 013043E2 		sub	r3, r3, #1
 2296 099c 8331A0E1 		mov	r3, r3, asl #3
 2297 09a0 10201BE5 		ldr	r2, [fp, #-16]
 2298 09a4 032082E0 		add	r2, r2, r3
 2299 09a8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2300 09ac 013043E2 		sub	r3, r3, #1
 2301 09b0 54129FE5 		ldr	r1, .L54+4
 2302 09b4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2303 09b8 0310C2E7 		strb	r1, [r2, r3]
 2304              	.L48:
 379:../reversi8_2018.c **** 
 380:../reversi8_2018.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2305              		.loc 1 380 0
 2306 09bc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2307 09c0 060053E3 		cmp	r3, #6
 2308 09c4 1500008A 		bhi	.L46
 2309              		.loc 1 380 0 is_stmt 0 discriminator 1
 2310 09c8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2311 09cc 013043E2 		sub	r3, r3, #1
 2312 09d0 8331A0E1 		mov	r3, r3, asl #3
 2313 09d4 10201BE5 		ldr	r2, [fp, #-16]
 2314 09d8 032082E0 		add	r2, r2, r3
 2315 09dc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2316 09e0 013083E2 		add	r3, r3, #1
 2317 09e4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2318 09e8 18329FE5 		ldr	r3, .L54
 2319 09ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2320 09f0 030052E1 		cmp	r2, r3
 2321 09f4 0900000A 		beq	.L46
 381:../reversi8_2018.c ****             candidatas[f-1][c+1] = SI;
 2322              		.loc 1 381 0 is_stmt 1
 2323 09f8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2324 09fc 013043E2 		sub	r3, r3, #1
 2325 0a00 8331A0E1 		mov	r3, r3, asl #3
 2326 0a04 10201BE5 		ldr	r2, [fp, #-16]
 2327 0a08 032082E0 		add	r2, r2, r3
 2328 0a0c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2329 0a10 013083E2 		add	r3, r3, #1
 2330 0a14 F0119FE5 		ldr	r1, .L54+4
 2331 0a18 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2332 0a1c 0310C2E7 		strb	r1, [r2, r3]
 2333              	.L46:
 382:../reversi8_2018.c ****     }
 383:../reversi8_2018.c ****     if (f < 7)
 2334              		.loc 1 383 0
 2335 0a20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2336 0a24 060053E3 		cmp	r3, #6
 2337 0a28 4500008A 		bhi	.L49
 384:../reversi8_2018.c ****     {
 385:../reversi8_2018.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2338              		.loc 1 385 0
 2339 0a2c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2340 0a30 013083E2 		add	r3, r3, #1
 2341 0a34 8331A0E1 		mov	r3, r3, asl #3
 2342 0a38 10201BE5 		ldr	r2, [fp, #-16]
 2343 0a3c 032082E0 		add	r2, r2, r3
 2344 0a40 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2345 0a44 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2346 0a48 B8319FE5 		ldr	r3, .L54
 2347 0a4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2348 0a50 030052E1 		cmp	r2, r3
 2349 0a54 0800000A 		beq	.L50
 386:../reversi8_2018.c ****             candidatas[f+1][c] = SI;
 2350              		.loc 1 386 0
 2351 0a58 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2352 0a5c 013083E2 		add	r3, r3, #1
 2353 0a60 8331A0E1 		mov	r3, r3, asl #3
 2354 0a64 10201BE5 		ldr	r2, [fp, #-16]
 2355 0a68 032082E0 		add	r2, r2, r3
 2356 0a6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2357 0a70 94119FE5 		ldr	r1, .L54+4
 2358 0a74 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2359 0a78 0310C2E7 		strb	r1, [r2, r3]
 2360              	.L50:
 387:../reversi8_2018.c **** 
 388:../reversi8_2018.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2361              		.loc 1 388 0
 2362 0a7c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2363 0a80 000053E3 		cmp	r3, #0
 2364 0a84 1500000A 		beq	.L51
 2365              		.loc 1 388 0 is_stmt 0 discriminator 1
 2366 0a88 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2367 0a8c 013083E2 		add	r3, r3, #1
 2368 0a90 8331A0E1 		mov	r3, r3, asl #3
 2369 0a94 10201BE5 		ldr	r2, [fp, #-16]
 2370 0a98 032082E0 		add	r2, r2, r3
 2371 0a9c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2372 0aa0 013043E2 		sub	r3, r3, #1
 2373 0aa4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2374 0aa8 58319FE5 		ldr	r3, .L54
 2375 0aac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2376 0ab0 030052E1 		cmp	r2, r3
 2377 0ab4 0900000A 		beq	.L51
 389:../reversi8_2018.c ****             candidatas[f+1][c-1] = SI;
 2378              		.loc 1 389 0 is_stmt 1
 2379 0ab8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2380 0abc 013083E2 		add	r3, r3, #1
 2381 0ac0 8331A0E1 		mov	r3, r3, asl #3
 2382 0ac4 10201BE5 		ldr	r2, [fp, #-16]
 2383 0ac8 032082E0 		add	r2, r2, r3
 2384 0acc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2385 0ad0 013043E2 		sub	r3, r3, #1
 2386 0ad4 30119FE5 		ldr	r1, .L54+4
 2387 0ad8 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2388 0adc 0310C2E7 		strb	r1, [r2, r3]
 2389              	.L51:
 390:../reversi8_2018.c **** 
 391:../reversi8_2018.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2390              		.loc 1 391 0
 2391 0ae0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2392 0ae4 060053E3 		cmp	r3, #6
 2393 0ae8 1500008A 		bhi	.L49
 2394              		.loc 1 391 0 is_stmt 0 discriminator 1
 2395 0aec 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2396 0af0 013083E2 		add	r3, r3, #1
 2397 0af4 8331A0E1 		mov	r3, r3, asl #3
 2398 0af8 10201BE5 		ldr	r2, [fp, #-16]
 2399 0afc 032082E0 		add	r2, r2, r3
 2400 0b00 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2401 0b04 013083E2 		add	r3, r3, #1
 2402 0b08 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2403 0b0c F4309FE5 		ldr	r3, .L54
 2404 0b10 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2405 0b14 030052E1 		cmp	r2, r3
 2406 0b18 0900000A 		beq	.L49
 392:../reversi8_2018.c ****             candidatas[f+1][c+1] = SI;
 2407              		.loc 1 392 0 is_stmt 1
 2408 0b1c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2409 0b20 013083E2 		add	r3, r3, #1
 2410 0b24 8331A0E1 		mov	r3, r3, asl #3
 2411 0b28 10201BE5 		ldr	r2, [fp, #-16]
 2412 0b2c 032082E0 		add	r2, r2, r3
 2413 0b30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2414 0b34 013083E2 		add	r3, r3, #1
 2415 0b38 CC109FE5 		ldr	r1, .L54+4
 2416 0b3c 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2417 0b40 0310C2E7 		strb	r1, [r2, r3]
 2418              	.L49:
 393:../reversi8_2018.c ****     }
 394:../reversi8_2018.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2419              		.loc 1 394 0
 2420 0b44 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2421 0b48 000053E3 		cmp	r3, #0
 2422 0b4c 1300000A 		beq	.L52
 2423              		.loc 1 394 0 is_stmt 0 discriminator 1
 2424 0b50 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2425 0b54 8331A0E1 		mov	r3, r3, asl #3
 2426 0b58 10201BE5 		ldr	r2, [fp, #-16]
 2427 0b5c 032082E0 		add	r2, r2, r3
 2428 0b60 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2429 0b64 013043E2 		sub	r3, r3, #1
 2430 0b68 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2431 0b6c 94309FE5 		ldr	r3, .L54
 2432 0b70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2433 0b74 030052E1 		cmp	r2, r3
 2434 0b78 0800000A 		beq	.L52
 395:../reversi8_2018.c ****         candidatas[f][c-1] = SI;
 2435              		.loc 1 395 0 is_stmt 1
 2436 0b7c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2437 0b80 8331A0E1 		mov	r3, r3, asl #3
 2438 0b84 10201BE5 		ldr	r2, [fp, #-16]
 2439 0b88 032082E0 		add	r2, r2, r3
 2440 0b8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2441 0b90 013043E2 		sub	r3, r3, #1
 2442 0b94 70109FE5 		ldr	r1, .L54+4
 2443 0b98 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2444 0b9c 0310C2E7 		strb	r1, [r2, r3]
 2445              	.L52:
 396:../reversi8_2018.c **** 
 397:../reversi8_2018.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2446              		.loc 1 397 0
 2447 0ba0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2448 0ba4 060053E3 		cmp	r3, #6
 2449 0ba8 1300008A 		bhi	.L45
 2450              		.loc 1 397 0 is_stmt 0 discriminator 1
 2451 0bac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2452 0bb0 8331A0E1 		mov	r3, r3, asl #3
 2453 0bb4 10201BE5 		ldr	r2, [fp, #-16]
 2454 0bb8 032082E0 		add	r2, r2, r3
 2455 0bbc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2456 0bc0 013083E2 		add	r3, r3, #1
 2457 0bc4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2458 0bc8 38309FE5 		ldr	r3, .L54
 2459 0bcc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2460 0bd0 030052E1 		cmp	r2, r3
 2461 0bd4 0800000A 		beq	.L45
 398:../reversi8_2018.c ****         candidatas[f][c+1] = SI;
 2462              		.loc 1 398 0 is_stmt 1
 2463 0bd8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2464 0bdc 8331A0E1 		mov	r3, r3, asl #3
 2465 0be0 10201BE5 		ldr	r2, [fp, #-16]
 2466 0be4 032082E0 		add	r2, r2, r3
 2467 0be8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2468 0bec 013083E2 		add	r3, r3, #1
 2469 0bf0 14109FE5 		ldr	r1, .L54+4
 2470 0bf4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2471 0bf8 0310C2E7 		strb	r1, [r2, r3]
 2472              	.L45:
 399:../reversi8_2018.c **** }
 2473              		.loc 1 399 0
 2474 0bfc 0CD04BE2 		sub	sp, fp, #12
 2475 0c00 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2476 0c04 1EFF2FE1 		bx	lr
 2477              	.L55:
 2478              		.align	2
 2479              	.L54:
 2480 0c08 00000000 		.word	CASILLA_OCUPADA
 2481 0c0c 00000000 		.word	SI
 2482              		.cfi_endproc
 2483              	.LFE8:
 2485              		.align	2
 2486              		.global	reversi8
 2488              	reversi8:
 2489              	.LFB9:
 400:../reversi8_2018.c **** 
 401:../reversi8_2018.c **** 
 402:../reversi8_2018.c **** 
 403:../reversi8_2018.c **** 
 404:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 405:../reversi8_2018.c **** // Proceso principal del juego
 406:../reversi8_2018.c **** // Utiliza el tablero,
 407:../reversi8_2018.c **** // y las direcciones en las que indica el jugador la fila y la columna
 408:../reversi8_2018.c **** // y la señal de ready que indica que se han actualizado fila y columna
 409:../reversi8_2018.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 410:../reversi8_2018.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 411:../reversi8_2018.c **** // en esta versión el humano lleva negras y la máquina blancas
 412:../reversi8_2018.c **** // no se comprueba que el humano mueva correctamente.
 413:../reversi8_2018.c **** // Sólo que la máquina realice un movimiento correcto.
 414:../reversi8_2018.c **** void reversi8()
 415:../reversi8_2018.c **** {
 2490              		.loc 1 415 0
 2491              		.cfi_startproc
 2492              		@ Function supports interworking.
 2493              		@ args = 0, pretend = 0, frame = 304
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0c10 0DC0A0E1 		mov	ip, sp
 2496              	.LCFI18:
 2497              		.cfi_def_cfa_register 12
 2498 0c14 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 2499 0c18 04B04CE2 		sub	fp, ip, #4
 2500              		.cfi_offset 14, -8
 2501              		.cfi_offset 13, -12
 2502              		.cfi_offset 11, -16
 2503              		.cfi_offset 10, -20
 2504              		.cfi_offset 9, -24
 2505              		.cfi_offset 8, -28
 2506              		.cfi_offset 7, -32
 2507              		.cfi_offset 6, -36
 2508              		.cfi_offset 5, -40
 2509              		.cfi_offset 4, -44
 2510              	.LCFI19:
 2511              		.cfi_def_cfa 11, 4
 2512 0c1c 4DDF4DE2 		sub	sp, sp, #308
 416:../reversi8_2018.c **** 
 417:../reversi8_2018.c **** 	 ////////////////////////////////////////////////////////////////////
 418:../reversi8_2018.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 419:../reversi8_2018.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 420:../reversi8_2018.c **** 	 ////////////////////////////////////////////////////////////////////
 421:../reversi8_2018.c **** 	uint8_t __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 2513              		.loc 1 421 0
 2514 0c20 34379FE5 		ldr	r3, .L61
 2515 0c24 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2516 0c28 2C379FE5 		ldr	r3, .L61
 2517 0c2c 00C0D3E5 		ldrb	ip, [r3, #0]	@ zero_extendqisi2
 2518 0c30 24379FE5 		ldr	r3, .L61
 2519 0c34 0040D3E5 		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 2520 0c38 1C379FE5 		ldr	r3, .L61
 2521 0c3c 0060D3E5 		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 2522 0c40 14379FE5 		ldr	r3, .L61
 2523 0c44 0080D3E5 		ldrb	r8, [r3, #0]	@ zero_extendqisi2
 2524 0c48 0C379FE5 		ldr	r3, .L61
 2525 0c4c 0090D3E5 		ldrb	r9, [r3, #0]	@ zero_extendqisi2
 2526 0c50 04379FE5 		ldr	r3, .L61
 2527 0c54 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2528 0c58 90300BE5 		str	r3, [fp, #-144]
 2529 0c5c F8369FE5 		ldr	r3, .L61
 2530 0c60 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2531 0c64 94300BE5 		str	r3, [fp, #-148]
 2532 0c68 EC369FE5 		ldr	r3, .L61
 2533 0c6c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2534 0c70 98300BE5 		str	r3, [fp, #-152]
 2535 0c74 E0369FE5 		ldr	r3, .L61
 2536 0c78 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2537 0c7c 9C300BE5 		str	r3, [fp, #-156]
 2538 0c80 D4369FE5 		ldr	r3, .L61
 2539 0c84 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2540 0c88 A0300BE5 		str	r3, [fp, #-160]
 2541 0c8c C8369FE5 		ldr	r3, .L61
 2542 0c90 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2543 0c94 A4300BE5 		str	r3, [fp, #-164]
 2544 0c98 BC369FE5 		ldr	r3, .L61
 2545 0c9c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2546 0ca0 A8300BE5 		str	r3, [fp, #-168]
 2547 0ca4 B0369FE5 		ldr	r3, .L61
 2548 0ca8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2549 0cac AC300BE5 		str	r3, [fp, #-172]
 2550 0cb0 A4369FE5 		ldr	r3, .L61
 2551 0cb4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2552 0cb8 B0300BE5 		str	r3, [fp, #-176]
 2553 0cbc 98369FE5 		ldr	r3, .L61
 2554 0cc0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2555 0cc4 B4300BE5 		str	r3, [fp, #-180]
 2556 0cc8 8C369FE5 		ldr	r3, .L61
 2557 0ccc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2558 0cd0 B8300BE5 		str	r3, [fp, #-184]
 2559 0cd4 80369FE5 		ldr	r3, .L61
 2560 0cd8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2561 0cdc BC300BE5 		str	r3, [fp, #-188]
 2562 0ce0 74369FE5 		ldr	r3, .L61
 2563 0ce4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2564 0ce8 C0300BE5 		str	r3, [fp, #-192]
 2565 0cec 68369FE5 		ldr	r3, .L61
 2566 0cf0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2567 0cf4 C4300BE5 		str	r3, [fp, #-196]
 2568 0cf8 5C369FE5 		ldr	r3, .L61
 2569 0cfc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2570 0d00 C8300BE5 		str	r3, [fp, #-200]
 2571 0d04 50369FE5 		ldr	r3, .L61
 2572 0d08 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2573 0d0c CC300BE5 		str	r3, [fp, #-204]
 2574 0d10 44369FE5 		ldr	r3, .L61
 2575 0d14 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2576 0d18 D0300BE5 		str	r3, [fp, #-208]
 2577 0d1c 38369FE5 		ldr	r3, .L61
 2578 0d20 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2579 0d24 D4300BE5 		str	r3, [fp, #-212]
 2580 0d28 2C369FE5 		ldr	r3, .L61
 2581 0d2c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2582 0d30 D8300BE5 		str	r3, [fp, #-216]
 2583 0d34 20369FE5 		ldr	r3, .L61
 2584 0d38 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2585 0d3c DC300BE5 		str	r3, [fp, #-220]
 2586 0d40 14369FE5 		ldr	r3, .L61
 2587 0d44 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2588 0d48 E0300BE5 		str	r3, [fp, #-224]
 2589 0d4c 08369FE5 		ldr	r3, .L61
 2590 0d50 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2591 0d54 E4300BE5 		str	r3, [fp, #-228]
 2592 0d58 FC359FE5 		ldr	r3, .L61
 2593 0d5c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2594 0d60 E8300BE5 		str	r3, [fp, #-232]
 2595 0d64 F0359FE5 		ldr	r3, .L61
 2596 0d68 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2597 0d6c EC300BE5 		str	r3, [fp, #-236]
 2598 0d70 E4359FE5 		ldr	r3, .L61
 2599 0d74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2600 0d78 F0300BE5 		str	r3, [fp, #-240]
 2601 0d7c D8359FE5 		ldr	r3, .L61
 2602 0d80 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2603 0d84 F4300BE5 		str	r3, [fp, #-244]
 2604 0d88 CC359FE5 		ldr	r3, .L61
 2605 0d8c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2606 0d90 F8300BE5 		str	r3, [fp, #-248]
 2607 0d94 C0359FE5 		ldr	r3, .L61
 2608 0d98 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2609 0d9c FC300BE5 		str	r3, [fp, #-252]
 2610 0da0 B4359FE5 		ldr	r3, .L61
 2611 0da4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2612 0da8 00310BE5 		str	r3, [fp, #-256]
 2613 0dac A8359FE5 		ldr	r3, .L61
 2614 0db0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2615 0db4 04310BE5 		str	r3, [fp, #-260]
 2616 0db8 9C359FE5 		ldr	r3, .L61
 2617 0dbc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2618 0dc0 08310BE5 		str	r3, [fp, #-264]
 2619 0dc4 90359FE5 		ldr	r3, .L61
 2620 0dc8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2621 0dcc 0C310BE5 		str	r3, [fp, #-268]
 2622 0dd0 84359FE5 		ldr	r3, .L61
 2623 0dd4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2624 0dd8 10310BE5 		str	r3, [fp, #-272]
 2625 0ddc 78359FE5 		ldr	r3, .L61
 2626 0de0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2627 0de4 14310BE5 		str	r3, [fp, #-276]
 2628 0de8 6C359FE5 		ldr	r3, .L61
 2629 0dec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2630 0df0 18310BE5 		str	r3, [fp, #-280]
 2631 0df4 60359FE5 		ldr	r3, .L61
 2632 0df8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2633 0dfc 1C310BE5 		str	r3, [fp, #-284]
 2634 0e00 54359FE5 		ldr	r3, .L61
 2635 0e04 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2636 0e08 20310BE5 		str	r3, [fp, #-288]
 2637 0e0c 48359FE5 		ldr	r3, .L61
 2638 0e10 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2639 0e14 24310BE5 		str	r3, [fp, #-292]
 2640 0e18 3C359FE5 		ldr	r3, .L61
 2641 0e1c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2642 0e20 28310BE5 		str	r3, [fp, #-296]
 2643 0e24 30359FE5 		ldr	r3, .L61
 2644 0e28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2645 0e2c 2C310BE5 		str	r3, [fp, #-300]
 2646 0e30 24359FE5 		ldr	r3, .L61
 2647 0e34 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2648 0e38 30310BE5 		str	r3, [fp, #-304]
 2649 0e3c 18359FE5 		ldr	r3, .L61
 2650 0e40 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2651 0e44 34310BE5 		str	r3, [fp, #-308]
 2652 0e48 0C359FE5 		ldr	r3, .L61
 2653 0e4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2654 0e50 38310BE5 		str	r3, [fp, #-312]
 2655 0e54 00359FE5 		ldr	r3, .L61
 2656 0e58 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2657 0e5c 3C310BE5 		str	r3, [fp, #-316]
 2658 0e60 F4349FE5 		ldr	r3, .L61
 2659 0e64 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2660 0e68 40310BE5 		str	r3, [fp, #-320]
 2661 0e6c E8349FE5 		ldr	r3, .L61
 2662 0e70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2663 0e74 44310BE5 		str	r3, [fp, #-324]
 2664 0e78 DC349FE5 		ldr	r3, .L61
 2665 0e7c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2666 0e80 48310BE5 		str	r3, [fp, #-328]
 2667 0e84 D0349FE5 		ldr	r3, .L61
 2668 0e88 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2669 0e8c 4C310BE5 		str	r3, [fp, #-332]
 2670 0e90 C4349FE5 		ldr	r3, .L61
 2671 0e94 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2672 0e98 50310BE5 		str	r3, [fp, #-336]
 2673 0e9c B8349FE5 		ldr	r3, .L61
 2674 0ea0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2675 0ea4 54310BE5 		str	r3, [fp, #-340]
 2676 0ea8 AC349FE5 		ldr	r3, .L61
 2677 0eac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2678 0eb0 58310BE5 		str	r3, [fp, #-344]
 2679 0eb4 A0349FE5 		ldr	r3, .L61
 2680 0eb8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2681 0ebc 5C310BE5 		str	r3, [fp, #-348]
 2682 0ec0 94349FE5 		ldr	r3, .L61
 2683 0ec4 00A0D3E5 		ldrb	sl, [r3, #0]	@ zero_extendqisi2
 2684 0ec8 8C349FE5 		ldr	r3, .L61
 2685 0ecc 0070D3E5 		ldrb	r7, [r3, #0]	@ zero_extendqisi2
 2686 0ed0 84349FE5 		ldr	r3, .L61
 2687 0ed4 0050D3E5 		ldrb	r5, [r3, #0]	@ zero_extendqisi2
 2688 0ed8 7C349FE5 		ldr	r3, .L61
 2689 0edc 00E0D3E5 		ldrb	lr, [r3, #0]	@ zero_extendqisi2
 2690 0ee0 74349FE5 		ldr	r3, .L61
 2691 0ee4 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2692 0ee8 6C349FE5 		ldr	r3, .L61
 2693 0eec 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2694 0ef0 0130A0E1 		mov	r3, r1
 2695 0ef4 7C304BE5 		strb	r3, [fp, #-124]
 2696 0ef8 0C30A0E1 		mov	r3, ip
 2697 0efc 7B304BE5 		strb	r3, [fp, #-123]
 2698 0f00 0430A0E1 		mov	r3, r4
 2699 0f04 7A304BE5 		strb	r3, [fp, #-122]
 2700 0f08 0630A0E1 		mov	r3, r6
 2701 0f0c 79304BE5 		strb	r3, [fp, #-121]
 2702 0f10 0830A0E1 		mov	r3, r8
 2703 0f14 78304BE5 		strb	r3, [fp, #-120]
 2704 0f18 0930A0E1 		mov	r3, r9
 2705 0f1c 77304BE5 		strb	r3, [fp, #-119]
 2706 0f20 90101BE5 		ldr	r1, [fp, #-144]
 2707 0f24 0130A0E1 		mov	r3, r1
 2708 0f28 76304BE5 		strb	r3, [fp, #-118]
 2709 0f2c 94101BE5 		ldr	r1, [fp, #-148]
 2710 0f30 0130A0E1 		mov	r3, r1
 2711 0f34 75304BE5 		strb	r3, [fp, #-117]
 2712 0f38 98101BE5 		ldr	r1, [fp, #-152]
 2713 0f3c 0130A0E1 		mov	r3, r1
 2714 0f40 74304BE5 		strb	r3, [fp, #-116]
 2715 0f44 9C101BE5 		ldr	r1, [fp, #-156]
 2716 0f48 0130A0E1 		mov	r3, r1
 2717 0f4c 73304BE5 		strb	r3, [fp, #-115]
 2718 0f50 A0101BE5 		ldr	r1, [fp, #-160]
 2719 0f54 0130A0E1 		mov	r3, r1
 2720 0f58 72304BE5 		strb	r3, [fp, #-114]
 2721 0f5c A4101BE5 		ldr	r1, [fp, #-164]
 2722 0f60 0130A0E1 		mov	r3, r1
 2723 0f64 71304BE5 		strb	r3, [fp, #-113]
 2724 0f68 A8101BE5 		ldr	r1, [fp, #-168]
 2725 0f6c 0130A0E1 		mov	r3, r1
 2726 0f70 70304BE5 		strb	r3, [fp, #-112]
 2727 0f74 AC101BE5 		ldr	r1, [fp, #-172]
 2728 0f78 0130A0E1 		mov	r3, r1
 2729 0f7c 6F304BE5 		strb	r3, [fp, #-111]
 2730 0f80 B0101BE5 		ldr	r1, [fp, #-176]
 2731 0f84 0130A0E1 		mov	r3, r1
 2732 0f88 6E304BE5 		strb	r3, [fp, #-110]
 2733 0f8c B4101BE5 		ldr	r1, [fp, #-180]
 2734 0f90 0130A0E1 		mov	r3, r1
 2735 0f94 6D304BE5 		strb	r3, [fp, #-109]
 2736 0f98 B8101BE5 		ldr	r1, [fp, #-184]
 2737 0f9c 0130A0E1 		mov	r3, r1
 2738 0fa0 6C304BE5 		strb	r3, [fp, #-108]
 2739 0fa4 BC101BE5 		ldr	r1, [fp, #-188]
 2740 0fa8 0130A0E1 		mov	r3, r1
 2741 0fac 6B304BE5 		strb	r3, [fp, #-107]
 2742 0fb0 C0101BE5 		ldr	r1, [fp, #-192]
 2743 0fb4 0130A0E1 		mov	r3, r1
 2744 0fb8 6A304BE5 		strb	r3, [fp, #-106]
 2745 0fbc C4101BE5 		ldr	r1, [fp, #-196]
 2746 0fc0 0130A0E1 		mov	r3, r1
 2747 0fc4 69304BE5 		strb	r3, [fp, #-105]
 2748 0fc8 C8101BE5 		ldr	r1, [fp, #-200]
 2749 0fcc 0130A0E1 		mov	r3, r1
 2750 0fd0 68304BE5 		strb	r3, [fp, #-104]
 2751 0fd4 CC101BE5 		ldr	r1, [fp, #-204]
 2752 0fd8 0130A0E1 		mov	r3, r1
 2753 0fdc 67304BE5 		strb	r3, [fp, #-103]
 2754 0fe0 D0101BE5 		ldr	r1, [fp, #-208]
 2755 0fe4 0130A0E1 		mov	r3, r1
 2756 0fe8 66304BE5 		strb	r3, [fp, #-102]
 2757 0fec D4101BE5 		ldr	r1, [fp, #-212]
 2758 0ff0 0130A0E1 		mov	r3, r1
 2759 0ff4 65304BE5 		strb	r3, [fp, #-101]
 2760 0ff8 D8101BE5 		ldr	r1, [fp, #-216]
 2761 0ffc 0130A0E1 		mov	r3, r1
 2762 1000 64304BE5 		strb	r3, [fp, #-100]
 2763 1004 DC101BE5 		ldr	r1, [fp, #-220]
 2764 1008 0130A0E1 		mov	r3, r1
 2765 100c 63304BE5 		strb	r3, [fp, #-99]
 2766 1010 E0101BE5 		ldr	r1, [fp, #-224]
 2767 1014 0130A0E1 		mov	r3, r1
 2768 1018 62304BE5 		strb	r3, [fp, #-98]
 2769 101c E4101BE5 		ldr	r1, [fp, #-228]
 2770 1020 0130A0E1 		mov	r3, r1
 2771 1024 61304BE5 		strb	r3, [fp, #-97]
 2772 1028 E8101BE5 		ldr	r1, [fp, #-232]
 2773 102c 0130A0E1 		mov	r3, r1
 2774 1030 60304BE5 		strb	r3, [fp, #-96]
 2775 1034 EC101BE5 		ldr	r1, [fp, #-236]
 2776 1038 0130A0E1 		mov	r3, r1
 2777 103c 5F304BE5 		strb	r3, [fp, #-95]
 2778 1040 F0101BE5 		ldr	r1, [fp, #-240]
 2779 1044 0130A0E1 		mov	r3, r1
 2780 1048 5E304BE5 		strb	r3, [fp, #-94]
 2781 104c F4101BE5 		ldr	r1, [fp, #-244]
 2782 1050 0130A0E1 		mov	r3, r1
 2783 1054 5D304BE5 		strb	r3, [fp, #-93]
 2784 1058 F8101BE5 		ldr	r1, [fp, #-248]
 2785 105c 0130A0E1 		mov	r3, r1
 2786 1060 5C304BE5 		strb	r3, [fp, #-92]
 2787 1064 FC101BE5 		ldr	r1, [fp, #-252]
 2788 1068 0130A0E1 		mov	r3, r1
 2789 106c 5B304BE5 		strb	r3, [fp, #-91]
 2790 1070 00111BE5 		ldr	r1, [fp, #-256]
 2791 1074 0130A0E1 		mov	r3, r1
 2792 1078 5A304BE5 		strb	r3, [fp, #-90]
 2793 107c 04111BE5 		ldr	r1, [fp, #-260]
 2794 1080 0130A0E1 		mov	r3, r1
 2795 1084 59304BE5 		strb	r3, [fp, #-89]
 2796 1088 08111BE5 		ldr	r1, [fp, #-264]
 2797 108c 0130A0E1 		mov	r3, r1
 2798 1090 58304BE5 		strb	r3, [fp, #-88]
 2799 1094 0C111BE5 		ldr	r1, [fp, #-268]
 2800 1098 0130A0E1 		mov	r3, r1
 2801 109c 57304BE5 		strb	r3, [fp, #-87]
 2802 10a0 10111BE5 		ldr	r1, [fp, #-272]
 2803 10a4 0130A0E1 		mov	r3, r1
 2804 10a8 56304BE5 		strb	r3, [fp, #-86]
 2805 10ac 14111BE5 		ldr	r1, [fp, #-276]
 2806 10b0 0130A0E1 		mov	r3, r1
 2807 10b4 55304BE5 		strb	r3, [fp, #-85]
 2808 10b8 18111BE5 		ldr	r1, [fp, #-280]
 2809 10bc 0130A0E1 		mov	r3, r1
 2810 10c0 54304BE5 		strb	r3, [fp, #-84]
 2811 10c4 1C111BE5 		ldr	r1, [fp, #-284]
 2812 10c8 0130A0E1 		mov	r3, r1
 2813 10cc 53304BE5 		strb	r3, [fp, #-83]
 2814 10d0 20111BE5 		ldr	r1, [fp, #-288]
 2815 10d4 0130A0E1 		mov	r3, r1
 2816 10d8 52304BE5 		strb	r3, [fp, #-82]
 2817 10dc 24111BE5 		ldr	r1, [fp, #-292]
 2818 10e0 0130A0E1 		mov	r3, r1
 2819 10e4 51304BE5 		strb	r3, [fp, #-81]
 2820 10e8 28111BE5 		ldr	r1, [fp, #-296]
 2821 10ec 0130A0E1 		mov	r3, r1
 2822 10f0 50304BE5 		strb	r3, [fp, #-80]
 2823 10f4 2C111BE5 		ldr	r1, [fp, #-300]
 2824 10f8 0130A0E1 		mov	r3, r1
 2825 10fc 4F304BE5 		strb	r3, [fp, #-79]
 2826 1100 30111BE5 		ldr	r1, [fp, #-304]
 2827 1104 0130A0E1 		mov	r3, r1
 2828 1108 4E304BE5 		strb	r3, [fp, #-78]
 2829 110c 34111BE5 		ldr	r1, [fp, #-308]
 2830 1110 0130A0E1 		mov	r3, r1
 2831 1114 4D304BE5 		strb	r3, [fp, #-77]
 2832 1118 38111BE5 		ldr	r1, [fp, #-312]
 2833 111c 0130A0E1 		mov	r3, r1
 2834 1120 4C304BE5 		strb	r3, [fp, #-76]
 2835 1124 3C111BE5 		ldr	r1, [fp, #-316]
 2836 1128 0130A0E1 		mov	r3, r1
 2837 112c 4B304BE5 		strb	r3, [fp, #-75]
 2838 1130 40111BE5 		ldr	r1, [fp, #-320]
 2839 1134 0130A0E1 		mov	r3, r1
 2840 1138 4A304BE5 		strb	r3, [fp, #-74]
 2841 113c 44111BE5 		ldr	r1, [fp, #-324]
 2842 1140 0130A0E1 		mov	r3, r1
 2843 1144 49304BE5 		strb	r3, [fp, #-73]
 2844 1148 48111BE5 		ldr	r1, [fp, #-328]
 2845 114c 0130A0E1 		mov	r3, r1
 2846 1150 48304BE5 		strb	r3, [fp, #-72]
 2847 1154 4C111BE5 		ldr	r1, [fp, #-332]
 2848 1158 0130A0E1 		mov	r3, r1
 2849 115c 47304BE5 		strb	r3, [fp, #-71]
 2850 1160 50111BE5 		ldr	r1, [fp, #-336]
 2851 1164 0130A0E1 		mov	r3, r1
 2852 1168 46304BE5 		strb	r3, [fp, #-70]
 2853 116c 54111BE5 		ldr	r1, [fp, #-340]
 2854 1170 0130A0E1 		mov	r3, r1
 2855 1174 45304BE5 		strb	r3, [fp, #-69]
 2856 1178 58111BE5 		ldr	r1, [fp, #-344]
 2857 117c 0130A0E1 		mov	r3, r1
 2858 1180 44304BE5 		strb	r3, [fp, #-68]
 2859 1184 5C111BE5 		ldr	r1, [fp, #-348]
 2860 1188 0130A0E1 		mov	r3, r1
 2861 118c 43304BE5 		strb	r3, [fp, #-67]
 2862 1190 0A30A0E1 		mov	r3, sl
 2863 1194 42304BE5 		strb	r3, [fp, #-66]
 2864 1198 0730A0E1 		mov	r3, r7
 2865 119c 41304BE5 		strb	r3, [fp, #-65]
 2866 11a0 0530A0E1 		mov	r3, r5
 2867 11a4 40304BE5 		strb	r3, [fp, #-64]
 2868 11a8 0E30A0E1 		mov	r3, lr
 2869 11ac 3F304BE5 		strb	r3, [fp, #-63]
 2870 11b0 0030A0E1 		mov	r3, r0
 2871 11b4 3E304BE5 		strb	r3, [fp, #-62]
 2872 11b8 0230A0E1 		mov	r3, r2
 2873 11bc 3D304BE5 		strb	r3, [fp, #-61]
 422:../reversi8_2018.c ****     {
 423:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 424:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 425:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 426:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 427:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 428:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 429:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 430:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 431:../reversi8_2018.c ****     };
 432:../reversi8_2018.c **** 
 433:../reversi8_2018.c **** 
 434:../reversi8_2018.c ****     int done;     // la máquina ha conseguido mover o no
 435:../reversi8_2018.c ****     int move = 0; // el humano ha conseguido mover o no
 2874              		.loc 1 435 0
 2875 11c0 0030A0E3 		mov	r3, #0
 2876 11c4 30300BE5 		str	r3, [fp, #-48]
 436:../reversi8_2018.c ****     int blancas, negras; // número de fichas de cada color
 437:../reversi8_2018.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 2877              		.loc 1 437 0
 2878 11c8 0030A0E3 		mov	r3, #0
 2879 11cc 34300BE5 		str	r3, [fp, #-52]
 438:../reversi8_2018.c ****                   // (ha introducido un valor de movimiento con algún 8)
 439:../reversi8_2018.c ****                   // y luego la máquina tampoco puede
 440:../reversi8_2018.c ****     uint8_t f, c;    // fila y columna elegidas por la máquina para su movimiento
 441:../reversi8_2018.c **** 
 442:../reversi8_2018.c ****     init_table(tablero, candidatas);
 2880              		.loc 1 442 0
 2881 11d0 7C304BE2 		sub	r3, fp, #124
 2882 11d4 84019FE5 		ldr	r0, .L61+4
 2883 11d8 0310A0E1 		mov	r1, r3
 2884 11dc FEFFFFEB 		bl	init_table
 443:../reversi8_2018.c ****     while (fin == 0)
 2885              		.loc 1 443 0
 2886 11e0 510000EA 		b	.L57
 2887              	.L60:
 444:../reversi8_2018.c ****     {
 445:../reversi8_2018.c ****         move = 0;
 2888              		.loc 1 445 0
 2889 11e4 0030A0E3 		mov	r3, #0
 2890 11e8 30300BE5 		str	r3, [fp, #-48]
 446:../reversi8_2018.c ****         esperar_mov(&ready);
 2891              		.loc 1 446 0
 2892 11ec 70019FE5 		ldr	r0, .L61+8
 2893 11f0 FEFFFFEB 		bl	esperar_mov
 447:../reversi8_2018.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 448:../reversi8_2018.c ****         if (((fila) != DIM) && ((columna) != DIM))
 2894              		.loc 1 448 0
 2895 11f4 6C319FE5 		ldr	r3, .L61+12
 2896 11f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2897 11fc 080053E3 		cmp	r3, #8
 2898 1200 2200000A 		beq	.L58
 2899              		.loc 1 448 0 is_stmt 0 discriminator 1
 2900 1204 60319FE5 		ldr	r3, .L61+16
 2901 1208 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2902 120c 080053E3 		cmp	r3, #8
 2903 1210 1E00000A 		beq	.L58
 449:../reversi8_2018.c ****         {
 450:../reversi8_2018.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2904              		.loc 1 450 0 is_stmt 1
 2905 1214 4C319FE5 		ldr	r3, .L61+12
 2906 1218 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2907 121c 0310A0E1 		mov	r1, r3
 2908 1220 44319FE5 		ldr	r3, .L61+16
 2909 1224 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2910 1228 30219FE5 		ldr	r2, .L61+4
 2911 122c 8111A0E1 		mov	r1, r1, asl #3
 2912 1230 033081E0 		add	r3, r1, r3
 2913 1234 033082E0 		add	r3, r2, r3
 2914 1238 0220A0E3 		mov	r2, #2
 2915 123c 0020C3E5 		strb	r2, [r3, #0]
 451:../reversi8_2018.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2916              		.loc 1 451 0
 2917 1240 20319FE5 		ldr	r3, .L61+12
 2918 1244 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2919 1248 1C319FE5 		ldr	r3, .L61+16
 2920 124c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2921 1250 08019FE5 		ldr	r0, .L61+4
 2922 1254 0210A0E1 		mov	r1, r2
 2923 1258 0320A0E1 		mov	r2, r3
 2924 125c 0230A0E3 		mov	r3, #2
 2925 1260 FEFFFFEB 		bl	actualizar_tablero
 452:../reversi8_2018.c ****             actualizar_candidatas(candidatas, fila, columna);
 2926              		.loc 1 452 0
 2927 1264 FC309FE5 		ldr	r3, .L61+12
 2928 1268 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2929 126c F8309FE5 		ldr	r3, .L61+16
 2930 1270 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2931 1274 7C104BE2 		sub	r1, fp, #124
 2932 1278 0100A0E1 		mov	r0, r1
 2933 127c 0210A0E1 		mov	r1, r2
 2934 1280 0320A0E1 		mov	r2, r3
 2935 1284 FEFFFFEB 		bl	actualizar_candidatas
 453:../reversi8_2018.c ****             move = 1;
 2936              		.loc 1 453 0
 2937 1288 0130A0E3 		mov	r3, #1
 2938 128c 30300BE5 		str	r3, [fp, #-48]
 2939              	.L58:
 454:../reversi8_2018.c ****         }
 455:../reversi8_2018.c **** 
 456:../reversi8_2018.c ****         // escribe el movimiento en las variables globales fila columna
 457:../reversi8_2018.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2940              		.loc 1 457 0
 2941 1290 7C104BE2 		sub	r1, fp, #124
 2942 1294 85204BE2 		sub	r2, fp, #133
 2943 1298 86304BE2 		sub	r3, fp, #134
 2944 129c 0100A0E1 		mov	r0, r1
 2945 12a0 B8109FE5 		ldr	r1, .L61+4
 2946 12a4 FEFFFFEB 		bl	elegir_mov
 2947 12a8 38000BE5 		str	r0, [fp, #-56]
 458:../reversi8_2018.c ****         if (done == -1)
 2948              		.loc 1 458 0
 2949 12ac 38301BE5 		ldr	r3, [fp, #-56]
 2950 12b0 010073E3 		cmn	r3, #1
 2951 12b4 0500001A 		bne	.L59
 459:../reversi8_2018.c ****         {
 460:../reversi8_2018.c ****             if (move == 0)
 2952              		.loc 1 460 0
 2953 12b8 30301BE5 		ldr	r3, [fp, #-48]
 2954 12bc 000053E3 		cmp	r3, #0
 2955 12c0 1900001A 		bne	.L57
 461:../reversi8_2018.c ****                 fin = 1;
 2956              		.loc 1 461 0
 2957 12c4 0130A0E3 		mov	r3, #1
 2958 12c8 34300BE5 		str	r3, [fp, #-52]
 2959 12cc 160000EA 		b	.L57
 2960              	.L59:
 462:../reversi8_2018.c ****         }
 463:../reversi8_2018.c ****         else
 464:../reversi8_2018.c ****         {
 465:../reversi8_2018.c ****             tablero[f][c] = FICHA_BLANCA;
 2961              		.loc 1 465 0
 2962 12d0 85305BE5 		ldrb	r3, [fp, #-133]	@ zero_extendqisi2
 2963 12d4 0310A0E1 		mov	r1, r3
 2964 12d8 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2965 12dc 7C209FE5 		ldr	r2, .L61+4
 2966 12e0 8111A0E1 		mov	r1, r1, asl #3
 2967 12e4 033081E0 		add	r3, r1, r3
 2968 12e8 033082E0 		add	r3, r2, r3
 2969 12ec 0120A0E3 		mov	r2, #1
 2970 12f0 0020C3E5 		strb	r2, [r3, #0]
 466:../reversi8_2018.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2971              		.loc 1 466 0
 2972 12f4 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2973 12f8 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2974 12fc 5C009FE5 		ldr	r0, .L61+4
 2975 1300 0210A0E1 		mov	r1, r2
 2976 1304 0320A0E1 		mov	r2, r3
 2977 1308 0130A0E3 		mov	r3, #1
 2978 130c FEFFFFEB 		bl	actualizar_tablero
 467:../reversi8_2018.c ****             actualizar_candidatas(candidatas, f, c);
 2979              		.loc 1 467 0
 2980 1310 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2981 1314 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2982 1318 7C104BE2 		sub	r1, fp, #124
 2983 131c 0100A0E1 		mov	r0, r1
 2984 1320 0210A0E1 		mov	r1, r2
 2985 1324 0320A0E1 		mov	r2, r3
 2986 1328 FEFFFFEB 		bl	actualizar_candidatas
 2987              	.L57:
 443:../reversi8_2018.c ****     while (fin == 0)
 2988              		.loc 1 443 0 discriminator 1
 2989 132c 34301BE5 		ldr	r3, [fp, #-52]
 2990 1330 000053E3 		cmp	r3, #0
 2991 1334 AAFFFF0A 		beq	.L60
 468:../reversi8_2018.c ****         }
 469:../reversi8_2018.c ****     }
 470:../reversi8_2018.c ****     contar(tablero, &blancas, &negras);
 2992              		.loc 1 470 0
 2993 1338 80204BE2 		sub	r2, fp, #128
 2994 133c 84304BE2 		sub	r3, fp, #132
 2995 1340 18009FE5 		ldr	r0, .L61+4
 2996 1344 0210A0E1 		mov	r1, r2
 2997 1348 0320A0E1 		mov	r2, r3
 2998 134c FEFFFFEB 		bl	contar
 471:../reversi8_2018.c **** }
 2999              		.loc 1 471 0
 3000 1350 28D04BE2 		sub	sp, fp, #40
 3001 1354 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 3002 1358 1EFF2FE1 		bx	lr
 3003              	.L62:
 3004              		.align	2
 3005              	.L61:
 3006 135c 00000000 		.word	NO
 3007 1360 00000000 		.word	tablero
 3008 1364 00000000 		.word	ready
 3009 1368 00000000 		.word	fila
 3010 136c 00000000 		.word	columna
 3011              		.cfi_endproc
 3012              	.LFE9:
 3014              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2018.c
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1212   .rodata:00000000 NO
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1213   .rodata:00000000 $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1217   .rodata:00000001 SI
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1222   .rodata:00000002 CASILLA_OCUPADA
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1227   .rodata:00000008 tabla_valor
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1296   .rodata:00000048 vSF
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1309   .rodata:00000050 vSC
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1323   .bss:00000000 tablero
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1320   .bss:00000000 $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1328   .bss:00000040 fila
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1333   .bss:00000041 columna
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1338   .bss:00000042 ready
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1341   .text:00000000 $a
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1344   .text:00000000 init_table
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1524   .text:0000020c $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1529   .text:00000214 $a
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1532   .text:00000214 esperar_mov
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1573   .text:00000254 ficha_valida
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1648   .text:00000308 patron_volteo
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1756   .text:0000041c voltear
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1821   .text:000004ac actualizar_tablero
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1912   .text:0000059c $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1917   .text:000005a4 $a
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:1920   .text:000005a4 elegir_mov
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2105   .text:000007ac $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2112   .text:000007bc $a
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2115   .text:000007bc contar
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2217   .text:000008b8 actualizar_candidatas
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2480   .text:00000c08 $d
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2485   .text:00000c10 $a
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:2488   .text:00000c10 reversi8
C:\Users\DEVIDE~1\AppData\Local\Temp\ccGcxBjE.s:3006   .text:0000135c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
patron_volteo_arm_c
